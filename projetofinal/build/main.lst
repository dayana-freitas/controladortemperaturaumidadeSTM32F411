ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB226:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** 
  19:Core/Src/main.c **** /* 
  20:Core/Src/main.c **** 	============================ CONTROLADOR DE TEMPERATURA E UMIDADE =============================
  21:Core/Src/main.c **** 	
  22:Core/Src/main.c **** 	Programação desenvolvida para uso de displays catodo comum em conjunto com resistradores de desl
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** 	Resumo do Funcionamento:
  25:Core/Src/main.c **** 	Umidade:
  26:Core/Src/main.c **** 		Ativa a irrigação se a umidade for menor ou igual ao mínimo.
  27:Core/Src/main.c **** 		Desativa a irrigação se a umidade for maior ou igual a 75% do intervalo entre mínimo e máximo
  28:Core/Src/main.c **** 	Temperatura:
  29:Core/Src/main.c **** 		Ativa o resfriamento se a temperatura for maior ou igual ao máximo.
  30:Core/Src/main.c **** 		Ativa o aquecimento se a temperatura for menor ou igual ao mínimo.
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 2


  32:Core/Src/main.c **** 	Funções Principais:
  33:Core/Src/main.c **** 		incrementoDecremento: Controla o btn_incremento ou btn_decremento dos valores de temperatura e um
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** 		atualizarDisplay: responsável por atualizar um display de 7 segmentos utilizando um registrador 
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** 		controlarSaidas: Decide se ativa ou desativa as saídas de controle (irrigação, resfriamento, a
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** 	Conexão do CI:
  40:Core/Src/main.c **** 		O CI possuí 8 saídas comuns e uma negada sendo conectado ao display da seguinte forma:
  41:Core/Src/main.c **** 		8 -> A | 7 -> B | 6 -> C | 5 -> D |4 -> E | 3 -> F | 2 -> G
  42:Core/Src/main.c **** 		-	A saída 1 pode vir a ser conectada ao ponto e a saída negana não está sendo utilizada.
  43:Core/Src/main.c **** 		-	A interpretação da função segue que a saída 8 é LSB e a saída 1 é MSB 
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** 	Números em decimal inseridos na função shiftRegister para apresentar algarismos no display:
  46:Core/Src/main.c ****     0 = 0111 1110 = 126   
  47:Core/Src/main.c ****     1 = 0000 1100 = 12    
  48:Core/Src/main.c ****     2 = 1011 0110 = 182   
  49:Core/Src/main.c ****     3 = 1001 1110 = 158
  50:Core/Src/main.c ****     4 = 1100 1100 = 204
  51:Core/Src/main.c ****     5 = 1101 1010 = 218
  52:Core/Src/main.c ****     6 = 1111 1010 = 250
  53:Core/Src/main.c ****     7 = 0000 1110 = 14
  54:Core/Src/main.c ****     8 = 1111 1110 = 254
  55:Core/Src/main.c ****     9 = 1101 1110 = 222
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** 	Conversão de valores para aparecer nos displays:
  58:Core/Src/main.c **** 		dez_temp = temp/10;
  59:Core/Src/main.c **** 		uni_temp = temp%10;
  60:Core/Src/main.c **** 		Através da divisão e do resto da divisão o valor da temperatura/umidade é dividido em unidade
  61:Core/Src/main.c **** 	
  62:Core/Src/main.c **** 	Ativação dos botões para controle:
  63:Core/Src/main.c **** 		Funções:
  64:Core/Src/main.c **** 			0 - Mostrador (configurar para voltar ao mostrador)
  65:Core/Src/main.c **** 			1 - temp_min
  66:Core/Src/main.c **** 			2 - temp_max
  67:Core/Src/main.c **** 			3 - umid_min
  68:Core/Src/main.c **** 			4 - umid_max
  69:Core/Src/main.c **** 		Funcionamento:
  70:Core/Src/main.c **** 		Clicar e segurar no botão de função por 4 seg
  71:Core/Src/main.c **** 		Vai aparecer o número da função no primeiro display
  72:Core/Src/main.c **** 		Botão 2 incrementa o valor e salva na variável
  73:Core/Src/main.c **** 		Botão 3 decrementa o valor e salva na variável
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** 	A programação funciona em dois loops sendo que no primeiro enquanto nada estiver sendo programad
  76:Core/Src/main.c **** */
  77:Core/Src/main.c **** /* USER CODE END Header */
  78:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  79:Core/Src/main.c **** #include "main.h"
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  82:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  83:Core/Src/main.c **** #include "math.h"
  84:Core/Src/main.c **** /* USER CODE END Includes */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  87:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  88:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  91:Core/Src/main.c **** /* USER CODE BEGIN PD */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** #define data1         GPIO_PIN_2 // Entrada de Dados
  94:Core/Src/main.c **** #define shift1        GPIO_PIN_3 // Registrador de Saída
  95:Core/Src/main.c **** #define store1        GPIO_PIN_4 // Registrador de Deslocamento
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** #define data2         GPIO_PIN_5 
  98:Core/Src/main.c **** #define shift2        GPIO_PIN_6  
  99:Core/Src/main.c **** #define store2        GPIO_PIN_7
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** #define data3         GPIO_PIN_0 //ATENÇÃO: Porta GPIOB
 102:Core/Src/main.c **** #define shift3        GPIO_PIN_1
 103:Core/Src/main.c **** #define store3        GPIO_PIN_2
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** #define sensor_umid   ADC_CHANNEL_0
 106:Core/Src/main.c **** #define sensor_temp   ADC_CHANNEL_1
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** #define irrigacaoA    GPIO_PIN_8
 109:Core/Src/main.c **** #define aquecimentoA  GPIO_PIN_11
 110:Core/Src/main.c **** #define refrigeracaoB GPIO_PIN_3
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** #define incremento    GPIO_PIN_12
 113:Core/Src/main.c **** #define decremento    GPIO_PIN_13
 114:Core/Src/main.c **** #define funcao        GPIO_PIN_15
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /* USER CODE END PD */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
 119:Core/Src/main.c **** /* USER CODE BEGIN PM */
 120:Core/Src/main.c **** /* USER CODE END PM */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
 123:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
 124:Core/Src/main.c **** TIM_HandleTypeDef htim3;
 125:Core/Src/main.c **** TIM_HandleTypeDef htim4;
 126:Core/Src/main.c **** TIM_HandleTypeDef htim5;
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /* USER CODE BEGIN PV */
 129:Core/Src/main.c **** uint32_t analog_temp = 0, analog_umid = 0, temp = 0, umid = 0, atualizacao = 0, menu_opcao = 0, umi
 130:Core/Src/main.c **** /* USER CODE END PV */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 133:Core/Src/main.c **** void SystemClock_Config(void);
 134:Core/Src/main.c **** static void MX_GPIO_Init(void);
 135:Core/Src/main.c **** static void MX_ADC1_Init(void);
 136:Core/Src/main.c **** static void MX_TIM4_Init(void);
 137:Core/Src/main.c **** static void MX_TIM3_Init(void);
 138:Core/Src/main.c **** static void MX_TIM5_Init(void);
 139:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 140:Core/Src/main.c **** void register1(uint8_t value); // Protótipo das funções do registrador
 141:Core/Src/main.c **** void register2(uint8_t value);
 142:Core/Src/main.c **** void register3(uint8_t value);
 143:Core/Src/main.c **** void controlarSaidas(int umid, int temp);
 144:Core/Src/main.c **** void atualizarDisplay(int display, int dado);
 145:Core/Src/main.c **** int incrementoDecremento(int variavel);
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 4


 146:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim);
 147:Core/Src/main.c **** static void ADC_SET_CHANNEL(uint32_t channel);
 148:Core/Src/main.c **** /* USER CODE END PFP */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 151:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** /* USER CODE END 0 */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****   * @brief  The application entry point.
 157:Core/Src/main.c ****   * @retval int
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** int main(void)
 160:Core/Src/main.c **** {
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END 1 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 169:Core/Src/main.c ****   HAL_Init();
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE END Init */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* Configure the system clock */
 176:Core/Src/main.c ****   SystemClock_Config();
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE END SysInit */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* Initialize all configured peripherals */
 183:Core/Src/main.c ****   MX_GPIO_Init();
 184:Core/Src/main.c ****   MX_ADC1_Init();
 185:Core/Src/main.c ****   MX_TIM4_Init();
 186:Core/Src/main.c ****   MX_TIM3_Init();
 187:Core/Src/main.c ****   MX_TIM5_Init();
 188:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 189:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, 0); // led ligado
 190:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, refrigeracaoB, 1);
 191:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, aquecimentoA, 1);
 192:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, irrigacaoA, 1);
 193:Core/Src/main.c ****   HAL_Delay(1000);
 194:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, refrigeracaoB, 0);
 195:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, aquecimentoA, 0);
 196:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, irrigacaoA, 0);
 197:Core/Src/main.c ****   register1(0);
 198:Core/Src/main.c ****   register2(0);
 199:Core/Src/main.c ****   register3(0);
 200:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 201:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim5);
 202:Core/Src/main.c ****   /* USER CODE END 2 */
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* Infinite loop */
 205:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 206:Core/Src/main.c ****   while (1)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     int controle = 0;
 209:Core/Src/main.c ****     if(!HAL_GPIO_ReadPin(GPIOB, funcao)) // Leitura do botão de função
 210:Core/Src/main.c ****     {
 211:Core/Src/main.c ****       HAL_Delay(500);
 212:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 213:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim5);                
 214:Core/Src/main.c ****       
 215:Core/Src/main.c ****       do 
 216:Core/Src/main.c ****       { // Loop de navegação do menu
 217:Core/Src/main.c ****         atualizarDisplay(1, menu_opcao); // Mostra a opção do menu no display 1
 218:Core/Src/main.c ****         switch (menu_opcao)
 219:Core/Src/main.c ****           {
 220:Core/Src/main.c ****             case 0:
 221:Core/Src/main.c ****               atualizarDisplay(2, 10);
 222:Core/Src/main.c ****               atualizarDisplay(3, 10);
 223:Core/Src/main.c ****               break;
 224:Core/Src/main.c ****             case 1: 
 225:Core/Src/main.c ****               atualizarDisplay(2, temp_min/10);  
 226:Core/Src/main.c ****               atualizarDisplay(3, temp_min%10);
 227:Core/Src/main.c ****               break;
 228:Core/Src/main.c ****             case 2:
 229:Core/Src/main.c ****               atualizarDisplay(2, temp_max/10);  
 230:Core/Src/main.c ****               atualizarDisplay(3, temp_max%10);
 231:Core/Src/main.c ****               break;
 232:Core/Src/main.c ****             case 3:
 233:Core/Src/main.c ****               atualizarDisplay(2, umid_min/10);  
 234:Core/Src/main.c ****               atualizarDisplay(3, umid_min%10);
 235:Core/Src/main.c ****               break;
 236:Core/Src/main.c ****             case 4:
 237:Core/Src/main.c ****               atualizarDisplay(2, umid_max/10);  
 238:Core/Src/main.c ****               atualizarDisplay(3, umid_max%10);
 239:Core/Src/main.c ****               break;
 240:Core/Src/main.c ****           }
 241:Core/Src/main.c ****         
 242:Core/Src/main.c ****         if (!HAL_GPIO_ReadPin(GPIOB, funcao)) 
 243:Core/Src/main.c ****         { // Seleciona a opção do menu
 244:Core/Src/main.c ****           HAL_Delay(500);
 245:Core/Src/main.c ****           menu_opcao++;
 246:Core/Src/main.c ****           if (menu_opcao > 4) menu_opcao = 0;
 247:Core/Src/main.c ****         }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****         if (!HAL_GPIO_ReadPin(GPIOB, incremento) || !HAL_GPIO_ReadPin(GPIOB, decremento)) 
 250:Core/Src/main.c ****         { // Verifica se o botão de incremento ou decremento foi pressionado
 251:Core/Src/main.c ****           HAL_Delay(250);
 252:Core/Src/main.c ****           switch (menu_opcao)
 253:Core/Src/main.c ****           {
 254:Core/Src/main.c ****             case 0:
 255:Core/Src/main.c ****               controle = 1;
 256:Core/Src/main.c ****               break;
 257:Core/Src/main.c ****             case 1: 
 258:Core/Src/main.c ****               temp_min = incrementoDecremento(temp_min);
 259:Core/Src/main.c ****               break;
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 6


 260:Core/Src/main.c ****             case 2:
 261:Core/Src/main.c ****               temp_max = incrementoDecremento(temp_max);
 262:Core/Src/main.c ****               break;
 263:Core/Src/main.c ****             case 3:
 264:Core/Src/main.c ****               umid_min = incrementoDecremento(umid_min);
 265:Core/Src/main.c ****               break;
 266:Core/Src/main.c ****             case 4:
 267:Core/Src/main.c ****               umid_max = incrementoDecremento(umid_max);
 268:Core/Src/main.c ****               break;
 269:Core/Src/main.c ****           }
 270:Core/Src/main.c ****         } 
 271:Core/Src/main.c ****       } while (controle == 0); 
 272:Core/Src/main.c ****     } 
 273:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim4);
 274:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim5);
 275:Core/Src/main.c ****   
 276:Core/Src/main.c ****     /* USER CODE END WHILE */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 279:Core/Src/main.c ****   }
 280:Core/Src/main.c ****   /* USER CODE END 3 */
 281:Core/Src/main.c **** }
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** /**
 284:Core/Src/main.c ****   * @brief System Clock Configuration
 285:Core/Src/main.c ****   * @retval None
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c **** void SystemClock_Config(void)
 288:Core/Src/main.c **** {
 289:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 290:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 295:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 298:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 299:Core/Src/main.c ****   */
 300:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 301:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 305:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 306:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 307:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 308:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****     Error_Handler();
 311:Core/Src/main.c ****   }
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 314:Core/Src/main.c ****   */
 315:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 316:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 7


 317:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 318:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 319:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 320:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c **** }
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** /**
 329:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 330:Core/Src/main.c ****   * @param None
 331:Core/Src/main.c ****   * @retval None
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c **** static void MX_ADC1_Init(void)
 334:Core/Src/main.c **** {
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 347:Core/Src/main.c ****   */
 348:Core/Src/main.c ****   hadc1.Instance = ADC1;
 349:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 350:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 351:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 352:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 353:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 354:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 355:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 356:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 357:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 358:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 359:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 360:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 361:Core/Src/main.c ****   {
 362:Core/Src/main.c ****     Error_Handler();
 363:Core/Src/main.c ****   }
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 366:Core/Src/main.c ****   */
 367:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 368:Core/Src/main.c ****   sConfig.Rank = 1;
 369:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 370:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 371:Core/Src/main.c ****   {
 372:Core/Src/main.c ****     Error_Handler();
 373:Core/Src/main.c ****   }
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 8


 374:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** }
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** /**
 381:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 382:Core/Src/main.c ****   * @param None
 383:Core/Src/main.c ****   * @retval None
 384:Core/Src/main.c ****   */
 385:Core/Src/main.c **** static void MX_TIM3_Init(void)
 386:Core/Src/main.c **** {
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 393:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 398:Core/Src/main.c ****   htim3.Instance = TIM3;
 399:Core/Src/main.c ****   htim3.Init.Prescaler = 9600-1;
 400:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 401:Core/Src/main.c ****   htim3.Init.Period = 1000;
 402:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 403:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 404:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****     Error_Handler();
 407:Core/Src/main.c ****   }
 408:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 409:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 410:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 411:Core/Src/main.c ****   {
 412:Core/Src/main.c ****     Error_Handler();
 413:Core/Src/main.c ****   }
 414:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 415:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 416:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 417:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 418:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 419:Core/Src/main.c ****   {
 420:Core/Src/main.c ****     Error_Handler();
 421:Core/Src/main.c ****   }
 422:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 425:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 426:Core/Src/main.c **** 
 427:Core/Src/main.c **** }
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** /**
 430:Core/Src/main.c ****   * @brief TIM4 Initialization Function
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 9


 431:Core/Src/main.c ****   * @param None
 432:Core/Src/main.c ****   * @retval None
 433:Core/Src/main.c ****   */
 434:Core/Src/main.c **** static void MX_TIM4_Init(void)
 435:Core/Src/main.c **** {
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 442:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 447:Core/Src/main.c ****   htim4.Instance = TIM4;
 448:Core/Src/main.c ****   htim4.Init.Prescaler = 9600-1;
 449:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 450:Core/Src/main.c ****   htim4.Init.Period = 10000;
 451:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 452:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 453:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 454:Core/Src/main.c ****   {
 455:Core/Src/main.c ****     Error_Handler();
 456:Core/Src/main.c ****   }
 457:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 458:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 459:Core/Src/main.c ****   {
 460:Core/Src/main.c ****     Error_Handler();
 461:Core/Src/main.c ****   }
 462:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 463:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 464:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 465:Core/Src/main.c ****   {
 466:Core/Src/main.c ****     Error_Handler();
 467:Core/Src/main.c ****   }
 468:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** }
 473:Core/Src/main.c **** 
 474:Core/Src/main.c **** /**
 475:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 476:Core/Src/main.c ****   * @param None
 477:Core/Src/main.c ****   * @retval None
 478:Core/Src/main.c ****   */
 479:Core/Src/main.c **** static void MX_TIM5_Init(void)
 480:Core/Src/main.c **** {
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 487:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 492:Core/Src/main.c ****   htim5.Instance = TIM5;
 493:Core/Src/main.c ****   htim5.Init.Prescaler = 9600-1;
 494:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 495:Core/Src/main.c ****   htim5.Init.Period = 10000;
 496:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 497:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 498:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 499:Core/Src/main.c ****   {
 500:Core/Src/main.c ****     Error_Handler();
 501:Core/Src/main.c ****   }
 502:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 503:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 504:Core/Src/main.c ****   {
 505:Core/Src/main.c ****     Error_Handler();
 506:Core/Src/main.c ****   }
 507:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 508:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 509:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 510:Core/Src/main.c ****   {
 511:Core/Src/main.c ****     Error_Handler();
 512:Core/Src/main.c ****   }
 513:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 514:Core/Src/main.c **** 
 515:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** }
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** /**
 520:Core/Src/main.c ****   * @brief GPIO Initialization Function
 521:Core/Src/main.c ****   * @param None
 522:Core/Src/main.c ****   * @retval None
 523:Core/Src/main.c ****   */
 524:Core/Src/main.c **** static void MX_GPIO_Init(void)
 525:Core/Src/main.c **** {
  28              		.loc 1 525 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41 0004 8AB0     		sub	sp, sp, #40
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 64
 526:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  44              		.loc 1 526 3 view .LVU1
  45              		.loc 1 526 20 is_stmt 0 view .LVU2
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 11


  46 0006 0024     		movs	r4, #0
  47 0008 0594     		str	r4, [sp, #20]
  48 000a 0694     		str	r4, [sp, #24]
  49 000c 0794     		str	r4, [sp, #28]
  50 000e 0894     		str	r4, [sp, #32]
  51 0010 0994     		str	r4, [sp, #36]
 527:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 528:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 529:Core/Src/main.c **** 
 530:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 531:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 531 3 is_stmt 1 view .LVU3
  53              	.LBB4:
  54              		.loc 1 531 3 view .LVU4
  55 0012 0194     		str	r4, [sp, #4]
  56              		.loc 1 531 3 view .LVU5
  57 0014 334B     		ldr	r3, .L3
  58 0016 1A6B     		ldr	r2, [r3, #48]
  59 0018 42F00402 		orr	r2, r2, #4
  60 001c 1A63     		str	r2, [r3, #48]
  61              		.loc 1 531 3 view .LVU6
  62 001e 1A6B     		ldr	r2, [r3, #48]
  63 0020 02F00402 		and	r2, r2, #4
  64 0024 0192     		str	r2, [sp, #4]
  65              		.loc 1 531 3 view .LVU7
  66 0026 019A     		ldr	r2, [sp, #4]
  67              	.LBE4:
  68              		.loc 1 531 3 view .LVU8
 532:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  69              		.loc 1 532 3 view .LVU9
  70              	.LBB5:
  71              		.loc 1 532 3 view .LVU10
  72 0028 0294     		str	r4, [sp, #8]
  73              		.loc 1 532 3 view .LVU11
  74 002a 1A6B     		ldr	r2, [r3, #48]
  75 002c 42F08002 		orr	r2, r2, #128
  76 0030 1A63     		str	r2, [r3, #48]
  77              		.loc 1 532 3 view .LVU12
  78 0032 1A6B     		ldr	r2, [r3, #48]
  79 0034 02F08002 		and	r2, r2, #128
  80 0038 0292     		str	r2, [sp, #8]
  81              		.loc 1 532 3 view .LVU13
  82 003a 029A     		ldr	r2, [sp, #8]
  83              	.LBE5:
  84              		.loc 1 532 3 view .LVU14
 533:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  85              		.loc 1 533 3 view .LVU15
  86              	.LBB6:
  87              		.loc 1 533 3 view .LVU16
  88 003c 0394     		str	r4, [sp, #12]
  89              		.loc 1 533 3 view .LVU17
  90 003e 1A6B     		ldr	r2, [r3, #48]
  91 0040 42F00102 		orr	r2, r2, #1
  92 0044 1A63     		str	r2, [r3, #48]
  93              		.loc 1 533 3 view .LVU18
  94 0046 1A6B     		ldr	r2, [r3, #48]
  95 0048 02F00102 		and	r2, r2, #1
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 12


  96 004c 0392     		str	r2, [sp, #12]
  97              		.loc 1 533 3 view .LVU19
  98 004e 039A     		ldr	r2, [sp, #12]
  99              	.LBE6:
 100              		.loc 1 533 3 view .LVU20
 534:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 101              		.loc 1 534 3 view .LVU21
 102              	.LBB7:
 103              		.loc 1 534 3 view .LVU22
 104 0050 0494     		str	r4, [sp, #16]
 105              		.loc 1 534 3 view .LVU23
 106 0052 1A6B     		ldr	r2, [r3, #48]
 107 0054 42F00202 		orr	r2, r2, #2
 108 0058 1A63     		str	r2, [r3, #48]
 109              		.loc 1 534 3 view .LVU24
 110 005a 1B6B     		ldr	r3, [r3, #48]
 111 005c 03F00203 		and	r3, r3, #2
 112 0060 0493     		str	r3, [sp, #16]
 113              		.loc 1 534 3 view .LVU25
 114 0062 049B     		ldr	r3, [sp, #16]
 115              	.LBE7:
 116              		.loc 1 534 3 view .LVU26
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 537:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 117              		.loc 1 537 3 view .LVU27
 118 0064 DFF88880 		ldr	r8, .L3+12
 119 0068 2246     		mov	r2, r4
 120 006a 4FF40051 		mov	r1, #8192
 121 006e 4046     		mov	r0, r8
 122 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL0:
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 540:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 124              		.loc 1 540 3 view .LVU28
 125 0074 1C4F     		ldr	r7, .L3+4
 126 0076 2246     		mov	r2, r4
 127 0078 40F6FC11 		movw	r1, #2556
 128 007c 3846     		mov	r0, r7
 129 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 130              	.LVL1:
 541:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_11, GPIO_PIN_RESET);
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 544:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3, GPIO_PIN_RESET);
 131              		.loc 1 544 3 view .LVU29
 132 0082 1A4D     		ldr	r5, .L3+8
 133 0084 2246     		mov	r2, r4
 134 0086 0F21     		movs	r1, #15
 135 0088 2846     		mov	r0, r5
 136 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL2:
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 547:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 138              		.loc 1 547 3 view .LVU30
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 13


 139              		.loc 1 547 23 is_stmt 0 view .LVU31
 140 008e 4FF40053 		mov	r3, #8192
 141 0092 0593     		str	r3, [sp, #20]
 548:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 548 3 is_stmt 1 view .LVU32
 143              		.loc 1 548 24 is_stmt 0 view .LVU33
 144 0094 0126     		movs	r6, #1
 145 0096 0696     		str	r6, [sp, #24]
 549:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 146              		.loc 1 549 3 is_stmt 1 view .LVU34
 147              		.loc 1 549 24 is_stmt 0 view .LVU35
 148 0098 0794     		str	r4, [sp, #28]
 550:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 149              		.loc 1 550 3 is_stmt 1 view .LVU36
 150              		.loc 1 550 25 is_stmt 0 view .LVU37
 151 009a 0894     		str	r4, [sp, #32]
 551:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 152              		.loc 1 551 3 is_stmt 1 view .LVU38
 153 009c 05A9     		add	r1, sp, #20
 154 009e 4046     		mov	r0, r8
 155 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL3:
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /*Configure GPIO pins : PA2 PA3 PA4 PA5
 554:Core/Src/main.c ****                            PA6 PA7 PA8 PA11 */
 555:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 157              		.loc 1 555 3 view .LVU39
 158              		.loc 1 555 23 is_stmt 0 view .LVU40
 159 00a4 40F6FC13 		movw	r3, #2556
 160 00a8 0593     		str	r3, [sp, #20]
 556:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_11;
 557:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 161              		.loc 1 557 3 is_stmt 1 view .LVU41
 162              		.loc 1 557 24 is_stmt 0 view .LVU42
 163 00aa 0696     		str	r6, [sp, #24]
 558:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 558 3 is_stmt 1 view .LVU43
 165              		.loc 1 558 24 is_stmt 0 view .LVU44
 166 00ac 0794     		str	r4, [sp, #28]
 559:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 167              		.loc 1 559 3 is_stmt 1 view .LVU45
 168              		.loc 1 559 25 is_stmt 0 view .LVU46
 169 00ae 0894     		str	r4, [sp, #32]
 560:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 170              		.loc 1 560 3 is_stmt 1 view .LVU47
 171 00b0 05A9     		add	r1, sp, #20
 172 00b2 3846     		mov	r0, r7
 173 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL4:
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3 */
 563:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 175              		.loc 1 563 3 view .LVU48
 176              		.loc 1 563 23 is_stmt 0 view .LVU49
 177 00b8 0F23     		movs	r3, #15
 178 00ba 0593     		str	r3, [sp, #20]
 564:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 14


 179              		.loc 1 564 3 is_stmt 1 view .LVU50
 180              		.loc 1 564 24 is_stmt 0 view .LVU51
 181 00bc 0696     		str	r6, [sp, #24]
 565:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 182              		.loc 1 565 3 is_stmt 1 view .LVU52
 183              		.loc 1 565 24 is_stmt 0 view .LVU53
 184 00be 0794     		str	r4, [sp, #28]
 566:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 185              		.loc 1 566 3 is_stmt 1 view .LVU54
 186              		.loc 1 566 25 is_stmt 0 view .LVU55
 187 00c0 0894     		str	r4, [sp, #32]
 567:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 188              		.loc 1 567 3 is_stmt 1 view .LVU56
 189 00c2 05A9     		add	r1, sp, #20
 190 00c4 2846     		mov	r0, r5
 191 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 192              	.LVL5:
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /*Configure GPIO pins : PB12 PB13 PB15 */
 570:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_15;
 193              		.loc 1 570 3 view .LVU57
 194              		.loc 1 570 23 is_stmt 0 view .LVU58
 195 00ca 4FF43043 		mov	r3, #45056
 196 00ce 0593     		str	r3, [sp, #20]
 571:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 197              		.loc 1 571 3 is_stmt 1 view .LVU59
 198              		.loc 1 571 24 is_stmt 0 view .LVU60
 199 00d0 0694     		str	r4, [sp, #24]
 572:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 200              		.loc 1 572 3 is_stmt 1 view .LVU61
 201              		.loc 1 572 24 is_stmt 0 view .LVU62
 202 00d2 0794     		str	r4, [sp, #28]
 573:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 203              		.loc 1 573 3 is_stmt 1 view .LVU63
 204 00d4 05A9     		add	r1, sp, #20
 205 00d6 2846     		mov	r0, r5
 206 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 207              	.LVL6:
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 576:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 577:Core/Src/main.c **** }
 208              		.loc 1 577 1 is_stmt 0 view .LVU64
 209 00dc 0AB0     		add	sp, sp, #40
 210              	.LCFI2:
 211              		.cfi_def_cfa_offset 24
 212              		@ sp needed
 213 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 214              	.L4:
 215 00e2 00BF     		.align	2
 216              	.L3:
 217 00e4 00380240 		.word	1073887232
 218 00e8 00000240 		.word	1073872896
 219 00ec 00040240 		.word	1073873920
 220 00f0 00080240 		.word	1073874944
 221              		.cfi_endproc
 222              	.LFE226:
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 15


 224              		.section	.text.register1,"ax",%progbits
 225              		.align	1
 226              		.global	register1
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	register1:
 232              	.LVL7:
 233              	.LFB227:
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c **** void register1(uint8_t value)
 582:Core/Src/main.c **** {
 234              		.loc 1 582 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		.loc 1 582 1 is_stmt 0 view .LVU66
 239 0000 70B5     		push	{r4, r5, r6, lr}
 240              	.LCFI3:
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 4, -16
 243              		.cfi_offset 5, -12
 244              		.cfi_offset 6, -8
 245              		.cfi_offset 14, -4
 246 0002 0646     		mov	r6, r0
 583:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, shift1, 1);
 247              		.loc 1 583 3 is_stmt 1 view .LVU67
 248 0004 0122     		movs	r2, #1
 249 0006 0821     		movs	r1, #8
 250 0008 1548     		ldr	r0, .L9
 251              	.LVL8:
 252              		.loc 1 583 3 is_stmt 0 view .LVU68
 253 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL9:
 584:Core/Src/main.c ****   for (int i = 0; i < 8; i++) // Deslocamento dos dados
 255              		.loc 1 584 3 is_stmt 1 view .LVU69
 256              	.LBB8:
 257              		.loc 1 584 8 view .LVU70
 258              		.loc 1 584 12 is_stmt 0 view .LVU71
 259 000e 0024     		movs	r4, #0
 260              		.loc 1 584 3 view .LVU72
 261 0010 13E0     		b	.L6
 262              	.LVL10:
 263              	.L7:
 585:Core/Src/main.c ****   {
 586:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, store1, GPIO_PIN_RESET); // Clock Low
 264              		.loc 1 586 5 is_stmt 1 discriminator 3 view .LVU73
 265 0012 134D     		ldr	r5, .L9
 266 0014 0022     		movs	r2, #0
 267 0016 1021     		movs	r1, #16
 268 0018 2846     		mov	r0, r5
 269 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 270              	.LVL11:
 587:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, data1, (value & (1 << i)) ? GPIO_PIN_SET : GPIO_PIN_RESET); // Envia o
 271              		.loc 1 587 5 discriminator 3 view .LVU74
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 16


 272              		.loc 1 587 56 is_stmt 0 discriminator 3 view .LVU75
 273 001e 46FA04F2 		asr	r2, r6, r4
 274              		.loc 1 587 5 discriminator 3 view .LVU76
 275 0022 02F00102 		and	r2, r2, #1
 276 0026 0421     		movs	r1, #4
 277 0028 2846     		mov	r0, r5
 278 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 279              	.LVL12:
 588:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, store1, GPIO_PIN_SET); // Clock High
 280              		.loc 1 588 5 is_stmt 1 discriminator 3 view .LVU77
 281 002e 0122     		movs	r2, #1
 282 0030 1021     		movs	r1, #16
 283 0032 2846     		mov	r0, r5
 284 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 285              	.LVL13:
 584:Core/Src/main.c ****   {
 286              		.loc 1 584 27 discriminator 3 view .LVU78
 287 0038 0134     		adds	r4, r4, #1
 288              	.LVL14:
 289              	.L6:
 584:Core/Src/main.c ****   {
 290              		.loc 1 584 21 discriminator 1 view .LVU79
 291 003a 072C     		cmp	r4, #7
 292 003c E9DD     		ble	.L7
 293              	.LBE8:
 589:Core/Src/main.c ****   }
 590:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, store1, GPIO_PIN_RESET); // Latch Low
 294              		.loc 1 590 3 view .LVU80
 295 003e 084C     		ldr	r4, .L9
 296              	.LVL15:
 297              		.loc 1 590 3 is_stmt 0 view .LVU81
 298 0040 0022     		movs	r2, #0
 299 0042 1021     		movs	r1, #16
 300 0044 2046     		mov	r0, r4
 301 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 302              	.LVL16:
 591:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, store1, GPIO_PIN_SET); // Latch High
 303              		.loc 1 591 3 is_stmt 1 view .LVU82
 304 004a 0122     		movs	r2, #1
 305 004c 1021     		movs	r1, #16
 306 004e 2046     		mov	r0, r4
 307 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 308              	.LVL17:
 592:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, shift1, 0);
 309              		.loc 1 592 3 view .LVU83
 310 0054 0022     		movs	r2, #0
 311 0056 0821     		movs	r1, #8
 312 0058 2046     		mov	r0, r4
 313 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 314              	.LVL18:
 593:Core/Src/main.c **** } //Fim register1
 315              		.loc 1 593 1 is_stmt 0 view .LVU84
 316 005e 70BD     		pop	{r4, r5, r6, pc}
 317              	.L10:
 318              		.align	2
 319              	.L9:
 320 0060 00000240 		.word	1073872896
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 17


 321              		.cfi_endproc
 322              	.LFE227:
 324              		.section	.text.register2,"ax",%progbits
 325              		.align	1
 326              		.global	register2
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	register2:
 332              	.LVL19:
 333              	.LFB228:
 594:Core/Src/main.c **** 
 595:Core/Src/main.c **** void register2(uint8_t value)
 596:Core/Src/main.c **** {
 334              		.loc 1 596 1 is_stmt 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		.loc 1 596 1 is_stmt 0 view .LVU86
 339 0000 70B5     		push	{r4, r5, r6, lr}
 340              	.LCFI4:
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 4, -16
 343              		.cfi_offset 5, -12
 344              		.cfi_offset 6, -8
 345              		.cfi_offset 14, -4
 346 0002 0646     		mov	r6, r0
 597:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, shift2, 1);
 347              		.loc 1 597 3 is_stmt 1 view .LVU87
 348 0004 0122     		movs	r2, #1
 349 0006 4021     		movs	r1, #64
 350 0008 1548     		ldr	r0, .L15
 351              	.LVL20:
 352              		.loc 1 597 3 is_stmt 0 view .LVU88
 353 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 354              	.LVL21:
 598:Core/Src/main.c ****   for (int i = 0; i < 8; i++) // Deslocamento dos dados
 355              		.loc 1 598 3 is_stmt 1 view .LVU89
 356              	.LBB9:
 357              		.loc 1 598 8 view .LVU90
 358              		.loc 1 598 12 is_stmt 0 view .LVU91
 359 000e 0024     		movs	r4, #0
 360              		.loc 1 598 3 view .LVU92
 361 0010 13E0     		b	.L12
 362              	.LVL22:
 363              	.L13:
 599:Core/Src/main.c ****   {
 600:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, store2, GPIO_PIN_RESET); // Clock Low
 364              		.loc 1 600 5 is_stmt 1 discriminator 3 view .LVU93
 365 0012 134D     		ldr	r5, .L15
 366 0014 0022     		movs	r2, #0
 367 0016 8021     		movs	r1, #128
 368 0018 2846     		mov	r0, r5
 369 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 370              	.LVL23:
 601:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, data2, (value & (1 << i)) ? GPIO_PIN_SET : GPIO_PIN_RESET); // Envia o
 371              		.loc 1 601 5 discriminator 3 view .LVU94
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 18


 372              		.loc 1 601 56 is_stmt 0 discriminator 3 view .LVU95
 373 001e 46FA04F2 		asr	r2, r6, r4
 374              		.loc 1 601 5 discriminator 3 view .LVU96
 375 0022 02F00102 		and	r2, r2, #1
 376 0026 2021     		movs	r1, #32
 377 0028 2846     		mov	r0, r5
 378 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 379              	.LVL24:
 602:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, store2, GPIO_PIN_SET); // Clock High
 380              		.loc 1 602 5 is_stmt 1 discriminator 3 view .LVU97
 381 002e 0122     		movs	r2, #1
 382 0030 8021     		movs	r1, #128
 383 0032 2846     		mov	r0, r5
 384 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 385              	.LVL25:
 598:Core/Src/main.c ****   {
 386              		.loc 1 598 27 discriminator 3 view .LVU98
 387 0038 0134     		adds	r4, r4, #1
 388              	.LVL26:
 389              	.L12:
 598:Core/Src/main.c ****   {
 390              		.loc 1 598 21 discriminator 1 view .LVU99
 391 003a 072C     		cmp	r4, #7
 392 003c E9DD     		ble	.L13
 393              	.LBE9:
 603:Core/Src/main.c ****   }
 604:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, store2, GPIO_PIN_RESET); // Latch Low
 394              		.loc 1 604 3 view .LVU100
 395 003e 084C     		ldr	r4, .L15
 396              	.LVL27:
 397              		.loc 1 604 3 is_stmt 0 view .LVU101
 398 0040 0022     		movs	r2, #0
 399 0042 8021     		movs	r1, #128
 400 0044 2046     		mov	r0, r4
 401 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 402              	.LVL28:
 605:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, store2, GPIO_PIN_SET); // Latch High
 403              		.loc 1 605 3 is_stmt 1 view .LVU102
 404 004a 0122     		movs	r2, #1
 405 004c 8021     		movs	r1, #128
 406 004e 2046     		mov	r0, r4
 407 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 408              	.LVL29:
 606:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, shift2, 0);
 409              		.loc 1 606 3 view .LVU103
 410 0054 0022     		movs	r2, #0
 411 0056 4021     		movs	r1, #64
 412 0058 2046     		mov	r0, r4
 413 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 414              	.LVL30:
 607:Core/Src/main.c **** } //Fim register2
 415              		.loc 1 607 1 is_stmt 0 view .LVU104
 416 005e 70BD     		pop	{r4, r5, r6, pc}
 417              	.L16:
 418              		.align	2
 419              	.L15:
 420 0060 00000240 		.word	1073872896
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 19


 421              		.cfi_endproc
 422              	.LFE228:
 424              		.section	.text.register3,"ax",%progbits
 425              		.align	1
 426              		.global	register3
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 431              	register3:
 432              	.LVL31:
 433              	.LFB229:
 608:Core/Src/main.c **** 
 609:Core/Src/main.c **** void register3(uint8_t value)
 610:Core/Src/main.c **** {
 434              		.loc 1 610 1 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		.loc 1 610 1 is_stmt 0 view .LVU106
 439 0000 70B5     		push	{r4, r5, r6, lr}
 440              	.LCFI5:
 441              		.cfi_def_cfa_offset 16
 442              		.cfi_offset 4, -16
 443              		.cfi_offset 5, -12
 444              		.cfi_offset 6, -8
 445              		.cfi_offset 14, -4
 446 0002 0646     		mov	r6, r0
 611:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, shift3, 1);
 447              		.loc 1 611 3 is_stmt 1 view .LVU107
 448 0004 0122     		movs	r2, #1
 449 0006 0221     		movs	r1, #2
 450 0008 1548     		ldr	r0, .L21
 451              	.LVL32:
 452              		.loc 1 611 3 is_stmt 0 view .LVU108
 453 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 454              	.LVL33:
 612:Core/Src/main.c ****   for (int i = 0; i < 8; i++) // Deslocamento dos dados
 455              		.loc 1 612 3 is_stmt 1 view .LVU109
 456              	.LBB10:
 457              		.loc 1 612 8 view .LVU110
 458              		.loc 1 612 12 is_stmt 0 view .LVU111
 459 000e 0024     		movs	r4, #0
 460              		.loc 1 612 3 view .LVU112
 461 0010 13E0     		b	.L18
 462              	.LVL34:
 463              	.L19:
 613:Core/Src/main.c ****   {
 614:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, store3, GPIO_PIN_RESET); // Clock Low
 464              		.loc 1 614 5 is_stmt 1 discriminator 3 view .LVU113
 465 0012 134D     		ldr	r5, .L21
 466 0014 0022     		movs	r2, #0
 467 0016 0421     		movs	r1, #4
 468 0018 2846     		mov	r0, r5
 469 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 470              	.LVL35:
 615:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, data3, (value & (1 << i)) ? GPIO_PIN_SET : GPIO_PIN_RESET); // Envia o
 471              		.loc 1 615 5 discriminator 3 view .LVU114
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 20


 472              		.loc 1 615 56 is_stmt 0 discriminator 3 view .LVU115
 473 001e 46FA04F2 		asr	r2, r6, r4
 474              		.loc 1 615 5 discriminator 3 view .LVU116
 475 0022 02F00102 		and	r2, r2, #1
 476 0026 0121     		movs	r1, #1
 477 0028 2846     		mov	r0, r5
 478 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 479              	.LVL36:
 616:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, store3, GPIO_PIN_SET); // Clock High
 480              		.loc 1 616 5 is_stmt 1 discriminator 3 view .LVU117
 481 002e 0122     		movs	r2, #1
 482 0030 0421     		movs	r1, #4
 483 0032 2846     		mov	r0, r5
 484 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 485              	.LVL37:
 612:Core/Src/main.c ****   {
 486              		.loc 1 612 27 discriminator 3 view .LVU118
 487 0038 0134     		adds	r4, r4, #1
 488              	.LVL38:
 489              	.L18:
 612:Core/Src/main.c ****   {
 490              		.loc 1 612 21 discriminator 1 view .LVU119
 491 003a 072C     		cmp	r4, #7
 492 003c E9DD     		ble	.L19
 493              	.LBE10:
 617:Core/Src/main.c ****   }
 618:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, store3, GPIO_PIN_RESET); // Latch Low
 494              		.loc 1 618 3 view .LVU120
 495 003e 084C     		ldr	r4, .L21
 496              	.LVL39:
 497              		.loc 1 618 3 is_stmt 0 view .LVU121
 498 0040 0022     		movs	r2, #0
 499 0042 0421     		movs	r1, #4
 500 0044 2046     		mov	r0, r4
 501 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 502              	.LVL40:
 619:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, store3, GPIO_PIN_SET); // Latch High
 503              		.loc 1 619 3 is_stmt 1 view .LVU122
 504 004a 0122     		movs	r2, #1
 505 004c 0421     		movs	r1, #4
 506 004e 2046     		mov	r0, r4
 507 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 508              	.LVL41:
 620:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, shift3, 0);
 509              		.loc 1 620 3 view .LVU123
 510 0054 0022     		movs	r2, #0
 511 0056 0221     		movs	r1, #2
 512 0058 2046     		mov	r0, r4
 513 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 514              	.LVL42:
 621:Core/Src/main.c **** } //Fim register3
 515              		.loc 1 621 1 is_stmt 0 view .LVU124
 516 005e 70BD     		pop	{r4, r5, r6, pc}
 517              	.L22:
 518              		.align	2
 519              	.L21:
 520 0060 00040240 		.word	1073873920
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 21


 521              		.cfi_endproc
 522              	.LFE229:
 524              		.section	.text.controlarSaidas,"ax",%progbits
 525              		.align	1
 526              		.global	controlarSaidas
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 531              	controlarSaidas:
 532              	.LVL43:
 533              	.LFB232:
 622:Core/Src/main.c **** 
 623:Core/Src/main.c **** static void ADC_SET_CHANNEL(uint32_t channel) // Função para setagem de canal (valor que ela rece
 624:Core/Src/main.c **** {
 625:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 626:Core/Src/main.c ****   sConfig.Channel = channel;
 627:Core/Src/main.c ****   sConfig.Rank = 1;
 628:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 629:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 630:Core/Src/main.c ****   {
 631:Core/Src/main.c ****     Error_Handler();
 632:Core/Src/main.c ****   }
 633:Core/Src/main.c **** }
 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 636:Core/Src/main.c ****   if (htim->Instance == TIM4)
 637:Core/Src/main.c ****   {
 638:Core/Src/main.c ****     // Inicia a conversão do primeiro potenciômetro temperatura
 639:Core/Src/main.c ****     ADC_SET_CHANNEL(sensor_temp);
 640:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 641:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, 100);
 642:Core/Src/main.c ****     analog_temp = HAL_ADC_GetValue(&hadc1);
 643:Core/Src/main.c ****     temp = round((float)(analog_temp*99)/4095);
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****     // Inicia a conversão do segundo potenciômetro umidade
 646:Core/Src/main.c ****     ADC_SET_CHANNEL(sensor_umid);
 647:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 648:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, 100);
 649:Core/Src/main.c ****     analog_umid = HAL_ADC_GetValue(&hadc1);
 650:Core/Src/main.c ****     umid = round((float)(analog_umid*99)/4095);
 651:Core/Src/main.c ****     
 652:Core/Src/main.c ****     controlarSaidas(umid, temp);
 653:Core/Src/main.c ****   }
 654:Core/Src/main.c **** 
 655:Core/Src/main.c ****   if (htim->Instance == TIM5) {
 656:Core/Src/main.c ****     if (atualizacao == 1)
 657:Core/Src/main.c ****     {
 658:Core/Src/main.c ****       register1(56);
 659:Core/Src/main.c ****       atualizarDisplay(2, umid/10);  
 660:Core/Src/main.c ****       atualizarDisplay(3, umid%10);
 661:Core/Src/main.c ****       atualizacao = 0;
 662:Core/Src/main.c ****     } else {
 663:Core/Src/main.c ****       register1(240);
 664:Core/Src/main.c ****       atualizarDisplay(2, temp/10);  
 665:Core/Src/main.c ****       atualizarDisplay(3, temp%10); 
 666:Core/Src/main.c ****       atualizacao = 1;
 667:Core/Src/main.c ****     }    
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 22


 668:Core/Src/main.c ****   }
 669:Core/Src/main.c **** }
 670:Core/Src/main.c **** 
 671:Core/Src/main.c **** void controlarSaidas(int umid, int temp) {
 534              		.loc 1 671 42 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		.loc 1 671 42 is_stmt 0 view .LVU126
 539 0000 38B5     		push	{r3, r4, r5, lr}
 540              	.LCFI6:
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 3, -16
 543              		.cfi_offset 4, -12
 544              		.cfi_offset 5, -8
 545              		.cfi_offset 14, -4
 546 0002 0546     		mov	r5, r0
 547 0004 0C46     		mov	r4, r1
 672:Core/Src/main.c ****   if (umid <= umid_min) 
 548              		.loc 1 672 3 is_stmt 1 view .LVU127
 549              		.loc 1 672 12 is_stmt 0 view .LVU128
 550 0006 4B4B     		ldr	r3, .L42
 551 0008 1A68     		ldr	r2, [r3]
 552              		.loc 1 672 6 view .LVU129
 553 000a 9042     		cmp	r0, r2
 554 000c 53D9     		bls	.L36
 673:Core/Src/main.c ****   { // Umidade do solo menor ou igual a umidade mínima, ativa a saída de irrigação
 674:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, irrigacaoA, 1);
 675:Core/Src/main.c ****     irrigacao = 1;
 676:Core/Src/main.c ****   }
 677:Core/Src/main.c ****   else if (umid >= (umid_min + (umid_max - umid_min) * 3 / 4)) 
 555              		.loc 1 677 8 is_stmt 1 view .LVU130
 556              		.loc 1 677 42 is_stmt 0 view .LVU131
 557 000e 4A4B     		ldr	r3, .L42+4
 558 0010 1B68     		ldr	r3, [r3]
 559 0012 9B1A     		subs	r3, r3, r2
 560              		.loc 1 677 54 view .LVU132
 561 0014 03EB4303 		add	r3, r3, r3, lsl #1
 562              		.loc 1 677 30 view .LVU133
 563 0018 02EB9302 		add	r2, r2, r3, lsr #2
 564              		.loc 1 677 11 view .LVU134
 565 001c 9042     		cmp	r0, r2
 566 001e 54D2     		bcs	.L37
 567              	.LVL44:
 568              	.L25:
 678:Core/Src/main.c ****   { // Irrigação ativada até que se atinja a umidade mínima mais 75% do intervalo entre umidade
 679:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, irrigacaoA, 0);
 680:Core/Src/main.c ****     irrigacao = 0;
 681:Core/Src/main.c ****   }
 682:Core/Src/main.c **** 
 683:Core/Src/main.c ****   if (temp >= temp_max) 
 569              		.loc 1 683 3 is_stmt 1 view .LVU135
 570              		.loc 1 683 12 is_stmt 0 view .LVU136
 571 0020 464B     		ldr	r3, .L42+8
 572 0022 1B68     		ldr	r3, [r3]
 573              		.loc 1 683 6 view .LVU137
 574 0024 9C42     		cmp	r4, r3
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 23


 575 0026 5AD2     		bcs	.L38
 684:Core/Src/main.c ****   { // Temperatura maior ou igual que a máxima ativa a refrigeração
 685:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, refrigeracaoB, 1);
 686:Core/Src/main.c ****     refrigeracao = 1;
 687:Core/Src/main.c ****   } 
 688:Core/Src/main.c ****   else if(temp < temp_max - (temp_max - temp_min) * 1 / 4) 
 576              		.loc 1 688 8 is_stmt 1 view .LVU138
 577              		.loc 1 688 51 is_stmt 0 view .LVU139
 578 0028 454A     		ldr	r2, .L42+12
 579 002a 1268     		ldr	r2, [r2]
 580              		.loc 1 688 39 view .LVU140
 581 002c 9A1A     		subs	r2, r3, r2
 582              		.loc 1 688 27 view .LVU141
 583 002e A3EB9203 		sub	r3, r3, r2, lsr #2
 584              		.loc 1 688 10 view .LVU142
 585 0032 9C42     		cmp	r4, r3
 586 0034 5CD3     		bcc	.L39
 587              	.L27:
 689:Core/Src/main.c ****   { // Refrigeração ativada até que se atinja a temperatura máxima menos 25% do intervalo entre
 690:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, refrigeracaoB, 0);
 691:Core/Src/main.c ****     refrigeracao = 0;
 692:Core/Src/main.c ****   }
 693:Core/Src/main.c ****   
 694:Core/Src/main.c ****   if (temp <= temp_min) { // Temperatura menor ou igual que a mínima ativa o aquecimento
 588              		.loc 1 694 3 is_stmt 1 view .LVU143
 589              		.loc 1 694 12 is_stmt 0 view .LVU144
 590 0036 424B     		ldr	r3, .L42+12
 591 0038 1B68     		ldr	r3, [r3]
 592              		.loc 1 694 6 view .LVU145
 593 003a 9C42     		cmp	r4, r3
 594 003c 61D9     		bls	.L40
 695:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, aquecimentoA, 1);
 696:Core/Src/main.c ****     aquecimento = 1;
 697:Core/Src/main.c ****   } 
 698:Core/Src/main.c ****   else if(temp > temp_min + (temp_max - temp_min) * 1 / 4) 
 595              		.loc 1 698 8 is_stmt 1 view .LVU146
 596              		.loc 1 698 51 is_stmt 0 view .LVU147
 597 003e 3F4A     		ldr	r2, .L42+8
 598 0040 1268     		ldr	r2, [r2]
 599              		.loc 1 698 39 view .LVU148
 600 0042 D21A     		subs	r2, r2, r3
 601              		.loc 1 698 27 view .LVU149
 602 0044 03EB9203 		add	r3, r3, r2, lsr #2
 603              		.loc 1 698 10 view .LVU150
 604 0048 9C42     		cmp	r4, r3
 605 004a 64D8     		bhi	.L41
 606              	.L29:
 699:Core/Src/main.c ****   { // Aquecimento ativo até que se atinja a temperatura mínima mais 25% do intervalo entre temp.
 700:Core/Src/main.c ****    HAL_GPIO_WritePin(GPIOA, aquecimentoA, 0);
 701:Core/Src/main.c ****    aquecimento = 0;
 702:Core/Src/main.c ****   }
 703:Core/Src/main.c **** 
 704:Core/Src/main.c ****   if (((temp <= temp_max - (temp_max - temp_min) * 9 / 10 && temp > temp_min) && aquecimento == 0) 
 607              		.loc 1 704 3 is_stmt 1 view .LVU151
 608              		.loc 1 704 26 is_stmt 0 view .LVU152
 609 004c 3B4B     		ldr	r3, .L42+8
 610 004e 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 24


 611              		.loc 1 704 38 view .LVU153
 612 0050 3B4B     		ldr	r3, .L42+12
 613 0052 1A68     		ldr	r2, [r3]
 614 0054 8B1A     		subs	r3, r1, r2
 615              		.loc 1 704 50 view .LVU154
 616 0056 03EBC303 		add	r3, r3, r3, lsl #3
 617              		.loc 1 704 54 view .LVU155
 618 005a 3A48     		ldr	r0, .L42+16
 619 005c A0FB0303 		umull	r0, r3, r0, r3
 620 0060 D808     		lsrs	r0, r3, #3
 621              		.loc 1 704 26 view .LVU156
 622 0062 A1EBD303 		sub	r3, r1, r3, lsr #3
 623              		.loc 1 704 6 view .LVU157
 624 0066 9C42     		cmp	r4, r3
 625 0068 04D8     		bhi	.L30
 626              		.loc 1 704 59 discriminator 1 view .LVU158
 627 006a 9442     		cmp	r4, r2
 628 006c 02D9     		bls	.L30
 629              		.loc 1 704 94 discriminator 3 view .LVU159
 630 006e 364B     		ldr	r3, .L42+20
 631 0070 1B68     		ldr	r3, [r3]
 632              		.loc 1 704 79 discriminator 3 view .LVU160
 633 0072 DBB1     		cbz	r3, .L31
 634              	.L30:
 705:Core/Src/main.c ****     ((temp >= temp_min + (temp_max - temp_min) * 9 / 10 && temp < temp_max) && refrigeracao == 0) |
 635              		.loc 1 705 24 discriminator 5 view .LVU161
 636 0074 0244     		add	r2, r2, r0
 704:Core/Src/main.c ****     ((temp >= temp_min + (temp_max - temp_min) * 9 / 10 && temp < temp_max) && refrigeracao == 0) |
 637              		.loc 1 704 100 discriminator 5 view .LVU162
 638 0076 9442     		cmp	r4, r2
 639 0078 04D3     		bcc	.L32
 640              		.loc 1 705 57 view .LVU163
 641 007a 8C42     		cmp	r4, r1
 642 007c 02D2     		bcs	.L32
 643              		.loc 1 705 93 discriminator 1 view .LVU164
 644 007e 334B     		ldr	r3, .L42+24
 645 0080 1B68     		ldr	r3, [r3]
 646              		.loc 1 705 77 discriminator 1 view .LVU165
 647 0082 9BB1     		cbz	r3, .L31
 648              	.L32:
 706:Core/Src/main.c ****     ((umid <= umid_max - (umid_max - umid_min) * 9 / 10 && umid > umid_min) && irrigacao == 0))
 649              		.loc 1 706 24 discriminator 3 view .LVU166
 650 0084 2C4B     		ldr	r3, .L42+4
 651 0086 1A68     		ldr	r2, [r3]
 652              		.loc 1 706 36 discriminator 3 view .LVU167
 653 0088 2A4B     		ldr	r3, .L42
 654 008a 1868     		ldr	r0, [r3]
 655 008c 131A     		subs	r3, r2, r0
 656              		.loc 1 706 48 discriminator 3 view .LVU168
 657 008e 03EBC303 		add	r3, r3, r3, lsl #3
 658              		.loc 1 706 52 discriminator 3 view .LVU169
 659 0092 2C49     		ldr	r1, .L42+16
 660 0094 A1FB0313 		umull	r1, r3, r1, r3
 661              		.loc 1 706 24 discriminator 3 view .LVU170
 662 0098 A2EBD302 		sub	r2, r2, r3, lsr #3
 705:Core/Src/main.c ****     ((temp >= temp_min + (temp_max - temp_min) * 9 / 10 && temp < temp_max) && refrigeracao == 0) |
 663              		.loc 1 705 99 discriminator 3 view .LVU171
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 25


 664 009c 9542     		cmp	r5, r2
 665 009e 44D8     		bhi	.L33
 666              		.loc 1 706 57 view .LVU172
 667 00a0 8542     		cmp	r5, r0
 668 00a2 42D9     		bls	.L33
 669              		.loc 1 706 90 discriminator 1 view .LVU173
 670 00a4 2A4B     		ldr	r3, .L42+28
 671 00a6 1B68     		ldr	r3, [r3]
 672              		.loc 1 706 77 discriminator 1 view .LVU174
 673 00a8 002B     		cmp	r3, #0
 674 00aa 3ED1     		bne	.L33
 675              	.L31:
 707:Core/Src/main.c ****   {
 708:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2); //Ativa o led de alerta para sinais dos sensores pró
 676              		.loc 1 708 5 is_stmt 1 view .LVU175
 677 00ac 0421     		movs	r1, #4
 678 00ae 2948     		ldr	r0, .L42+32
 679 00b0 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 680              	.LVL45:
 681 00b4 3DE0     		b	.L23
 682              	.LVL46:
 683              	.L36:
 674:Core/Src/main.c ****     irrigacao = 1;
 684              		.loc 1 674 5 view .LVU176
 685 00b6 0122     		movs	r2, #1
 686 00b8 4FF48071 		mov	r1, #256
 687              	.LVL47:
 674:Core/Src/main.c ****     irrigacao = 1;
 688              		.loc 1 674 5 is_stmt 0 view .LVU177
 689 00bc 2648     		ldr	r0, .L42+36
 690              	.LVL48:
 674:Core/Src/main.c ****     irrigacao = 1;
 691              		.loc 1 674 5 view .LVU178
 692 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 693              	.LVL49:
 675:Core/Src/main.c ****   }
 694              		.loc 1 675 5 is_stmt 1 view .LVU179
 675:Core/Src/main.c ****   }
 695              		.loc 1 675 15 is_stmt 0 view .LVU180
 696 00c2 234B     		ldr	r3, .L42+28
 697 00c4 0122     		movs	r2, #1
 698 00c6 1A60     		str	r2, [r3]
 699 00c8 AAE7     		b	.L25
 700              	.LVL50:
 701              	.L37:
 679:Core/Src/main.c ****     irrigacao = 0;
 702              		.loc 1 679 5 is_stmt 1 view .LVU181
 703 00ca 0022     		movs	r2, #0
 704 00cc 4FF48071 		mov	r1, #256
 705              	.LVL51:
 679:Core/Src/main.c ****     irrigacao = 0;
 706              		.loc 1 679 5 is_stmt 0 view .LVU182
 707 00d0 2148     		ldr	r0, .L42+36
 708              	.LVL52:
 679:Core/Src/main.c ****     irrigacao = 0;
 709              		.loc 1 679 5 view .LVU183
 710 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 26


 711              	.LVL53:
 680:Core/Src/main.c ****   }
 712              		.loc 1 680 5 is_stmt 1 view .LVU184
 680:Core/Src/main.c ****   }
 713              		.loc 1 680 15 is_stmt 0 view .LVU185
 714 00d6 1E4B     		ldr	r3, .L42+28
 715 00d8 0022     		movs	r2, #0
 716 00da 1A60     		str	r2, [r3]
 717 00dc A0E7     		b	.L25
 718              	.L38:
 685:Core/Src/main.c ****     refrigeracao = 1;
 719              		.loc 1 685 5 is_stmt 1 view .LVU186
 720 00de 0122     		movs	r2, #1
 721 00e0 0821     		movs	r1, #8
 722 00e2 1E48     		ldr	r0, .L42+40
 723 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 724              	.LVL54:
 686:Core/Src/main.c ****   } 
 725              		.loc 1 686 5 view .LVU187
 686:Core/Src/main.c ****   } 
 726              		.loc 1 686 18 is_stmt 0 view .LVU188
 727 00e8 184B     		ldr	r3, .L42+24
 728 00ea 0122     		movs	r2, #1
 729 00ec 1A60     		str	r2, [r3]
 730 00ee A2E7     		b	.L27
 731              	.L39:
 690:Core/Src/main.c ****     refrigeracao = 0;
 732              		.loc 1 690 5 is_stmt 1 view .LVU189
 733 00f0 0022     		movs	r2, #0
 734 00f2 0821     		movs	r1, #8
 735 00f4 1948     		ldr	r0, .L42+40
 736 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 737              	.LVL55:
 691:Core/Src/main.c ****   }
 738              		.loc 1 691 5 view .LVU190
 691:Core/Src/main.c ****   }
 739              		.loc 1 691 18 is_stmt 0 view .LVU191
 740 00fa 144B     		ldr	r3, .L42+24
 741 00fc 0022     		movs	r2, #0
 742 00fe 1A60     		str	r2, [r3]
 743 0100 99E7     		b	.L27
 744              	.L40:
 695:Core/Src/main.c ****     aquecimento = 1;
 745              		.loc 1 695 5 is_stmt 1 view .LVU192
 746 0102 0122     		movs	r2, #1
 747 0104 4FF40061 		mov	r1, #2048
 748 0108 1348     		ldr	r0, .L42+36
 749 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 750              	.LVL56:
 696:Core/Src/main.c ****   } 
 751              		.loc 1 696 5 view .LVU193
 696:Core/Src/main.c ****   } 
 752              		.loc 1 696 17 is_stmt 0 view .LVU194
 753 010e 0E4B     		ldr	r3, .L42+20
 754 0110 0122     		movs	r2, #1
 755 0112 1A60     		str	r2, [r3]
 756 0114 9AE7     		b	.L29
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 27


 757              	.L41:
 700:Core/Src/main.c ****    aquecimento = 0;
 758              		.loc 1 700 4 is_stmt 1 view .LVU195
 759 0116 0022     		movs	r2, #0
 760 0118 4FF40061 		mov	r1, #2048
 761 011c 0E48     		ldr	r0, .L42+36
 762 011e FFF7FEFF 		bl	HAL_GPIO_WritePin
 763              	.LVL57:
 701:Core/Src/main.c ****   }
 764              		.loc 1 701 4 view .LVU196
 701:Core/Src/main.c ****   }
 765              		.loc 1 701 16 is_stmt 0 view .LVU197
 766 0122 094B     		ldr	r3, .L42+20
 767 0124 0022     		movs	r2, #0
 768 0126 1A60     		str	r2, [r3]
 769 0128 90E7     		b	.L29
 770              	.L33:
 709:Core/Src/main.c ****   } 
 710:Core/Src/main.c ****   else HAL_TIM_PWM_Stop(&htim3, TIM_CHANNEL_2);
 771              		.loc 1 710 8 is_stmt 1 view .LVU198
 772 012a 0421     		movs	r1, #4
 773 012c 0948     		ldr	r0, .L42+32
 774 012e FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 775              	.LVL58:
 776              	.L23:
 711:Core/Src/main.c **** }
 777              		.loc 1 711 1 is_stmt 0 view .LVU199
 778 0132 38BD     		pop	{r3, r4, r5, pc}
 779              	.LVL59:
 780              	.L43:
 781              		.loc 1 711 1 view .LVU200
 782              		.align	2
 783              	.L42:
 784 0134 00000000 		.word	.LANCHOR0
 785 0138 00000000 		.word	.LANCHOR2
 786 013c 00000000 		.word	.LANCHOR3
 787 0140 00000000 		.word	.LANCHOR5
 788 0144 CDCCCCCC 		.word	-858993459
 789 0148 00000000 		.word	.LANCHOR6
 790 014c 00000000 		.word	.LANCHOR4
 791 0150 00000000 		.word	.LANCHOR1
 792 0154 00000000 		.word	.LANCHOR7
 793 0158 00000240 		.word	1073872896
 794 015c 00040240 		.word	1073873920
 795              		.cfi_endproc
 796              	.LFE232:
 798              		.section	.text.atualizarDisplay,"ax",%progbits
 799              		.align	1
 800              		.global	atualizarDisplay
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 805              	atualizarDisplay:
 806              	.LVL60:
 807              	.LFB233:
 712:Core/Src/main.c **** 
 713:Core/Src/main.c **** void atualizarDisplay(int display, int dado) {
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 28


 808              		.loc 1 713 46 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 48
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		.loc 1 713 46 is_stmt 0 view .LVU202
 813 0000 30B5     		push	{r4, r5, lr}
 814              	.LCFI7:
 815              		.cfi_def_cfa_offset 12
 816              		.cfi_offset 4, -12
 817              		.cfi_offset 5, -8
 818              		.cfi_offset 14, -4
 819 0002 8DB0     		sub	sp, sp, #52
 820              	.LCFI8:
 821              		.cfi_def_cfa_offset 64
 822 0004 8646     		mov	lr, r0
 823 0006 0D46     		mov	r5, r1
 714:Core/Src/main.c ****   int valores[] = {126, 12, 182, 158, 204, 218, 250, 14, 254, 222, 0};
 824              		.loc 1 714 3 is_stmt 1 view .LVU203
 825              		.loc 1 714 7 is_stmt 0 view .LVU204
 826 0008 0DF1040C 		add	ip, sp, #4
 827 000c 164C     		ldr	r4, .L50
 828 000e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 829              	.LVL61:
 830              		.loc 1 714 7 view .LVU205
 831 0010 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 832 0014 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 833 0016 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 834 001a 94E80700 		ldm	r4, {r0, r1, r2}
 835 001e 8CE80700 		stm	ip, {r0, r1, r2}
 715:Core/Src/main.c ****   switch (display) {
 836              		.loc 1 715 3 is_stmt 1 view .LVU206
 837 0022 BEF1020F 		cmp	lr, #2
 838 0026 0FD0     		beq	.L45
 839 0028 BEF1030F 		cmp	lr, #3
 840 002c 14D0     		beq	.L46
 841 002e BEF1010F 		cmp	lr, #1
 842 0032 01D0     		beq	.L49
 843              	.LVL62:
 844              	.L44:
 716:Core/Src/main.c ****     case 1:
 717:Core/Src/main.c ****       register1(valores[dado]);
 718:Core/Src/main.c ****       break;
 719:Core/Src/main.c ****     case 2:
 720:Core/Src/main.c ****       register2(valores[dado]);
 721:Core/Src/main.c ****       break;
 722:Core/Src/main.c ****     case 3:
 723:Core/Src/main.c ****       register3(valores[dado]);
 724:Core/Src/main.c ****       break;
 725:Core/Src/main.c ****   }
 726:Core/Src/main.c **** }
 845              		.loc 1 726 1 is_stmt 0 view .LVU207
 846 0034 0DB0     		add	sp, sp, #52
 847              	.LCFI9:
 848              		.cfi_remember_state
 849              		.cfi_def_cfa_offset 12
 850              		@ sp needed
 851 0036 30BD     		pop	{r4, r5, pc}
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 29


 852              	.LVL63:
 853              	.L49:
 854              	.LCFI10:
 855              		.cfi_restore_state
 717:Core/Src/main.c ****       break;
 856              		.loc 1 717 7 is_stmt 1 view .LVU208
 717:Core/Src/main.c ****       break;
 857              		.loc 1 717 24 is_stmt 0 view .LVU209
 858 0038 0CAB     		add	r3, sp, #48
 859 003a 03EB8501 		add	r1, r3, r5, lsl #2
 717:Core/Src/main.c ****       break;
 860              		.loc 1 717 7 view .LVU210
 861 003e 11F82C0C 		ldrb	r0, [r1, #-44]	@ zero_extendqisi2
 862 0042 FFF7FEFF 		bl	register1
 863              	.LVL64:
 718:Core/Src/main.c ****     case 2:
 864              		.loc 1 718 7 is_stmt 1 view .LVU211
 865 0046 F5E7     		b	.L44
 866              	.LVL65:
 867              	.L45:
 720:Core/Src/main.c ****       break;
 868              		.loc 1 720 7 view .LVU212
 720:Core/Src/main.c ****       break;
 869              		.loc 1 720 24 is_stmt 0 view .LVU213
 870 0048 0CAB     		add	r3, sp, #48
 871 004a 03EB8501 		add	r1, r3, r5, lsl #2
 720:Core/Src/main.c ****       break;
 872              		.loc 1 720 7 view .LVU214
 873 004e 11F82C0C 		ldrb	r0, [r1, #-44]	@ zero_extendqisi2
 874 0052 FFF7FEFF 		bl	register2
 875              	.LVL66:
 721:Core/Src/main.c ****     case 3:
 876              		.loc 1 721 7 is_stmt 1 view .LVU215
 877 0056 EDE7     		b	.L44
 878              	.LVL67:
 879              	.L46:
 723:Core/Src/main.c ****       break;
 880              		.loc 1 723 7 view .LVU216
 723:Core/Src/main.c ****       break;
 881              		.loc 1 723 24 is_stmt 0 view .LVU217
 882 0058 0CAB     		add	r3, sp, #48
 883 005a 03EB8501 		add	r1, r3, r5, lsl #2
 723:Core/Src/main.c ****       break;
 884              		.loc 1 723 7 view .LVU218
 885 005e 11F82C0C 		ldrb	r0, [r1, #-44]	@ zero_extendqisi2
 886 0062 FFF7FEFF 		bl	register3
 887              	.LVL68:
 724:Core/Src/main.c ****   }
 888              		.loc 1 724 7 is_stmt 1 view .LVU219
 889              		.loc 1 726 1 is_stmt 0 view .LVU220
 890 0066 E5E7     		b	.L44
 891              	.L51:
 892              		.align	2
 893              	.L50:
 894 0068 00000000 		.word	.LANCHOR8
 895              		.cfi_endproc
 896              	.LFE233:
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 30


 898              		.section	.text.incrementoDecremento,"ax",%progbits
 899              		.align	1
 900              		.global	incrementoDecremento
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 905              	incrementoDecremento:
 906              	.LVL69:
 907              	.LFB234:
 727:Core/Src/main.c **** 
 728:Core/Src/main.c **** int incrementoDecremento(int variavel) {
 908              		.loc 1 728 40 is_stmt 1 view -0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		.loc 1 728 40 is_stmt 0 view .LVU222
 913 0000 38B5     		push	{r3, r4, r5, lr}
 914              	.LCFI11:
 915              		.cfi_def_cfa_offset 16
 916              		.cfi_offset 3, -16
 917              		.cfi_offset 4, -12
 918              		.cfi_offset 5, -8
 919              		.cfi_offset 14, -4
 920 0002 0546     		mov	r5, r0
 729:Core/Src/main.c ****   int flag = 0;
 921              		.loc 1 729 3 is_stmt 1 view .LVU223
 922              	.LVL70:
 730:Core/Src/main.c ****   while (flag == 0)
 923              		.loc 1 730 3 view .LVU224
 924              		.loc 1 730 9 is_stmt 0 view .LVU225
 925 0004 0FE0     		b	.L53
 926              	.LVL71:
 927              	.L61:
 731:Core/Src/main.c ****   {
 732:Core/Src/main.c ****     atualizarDisplay(2, variavel / 10);
 733:Core/Src/main.c ****     atualizarDisplay(3, variavel % 10);
 734:Core/Src/main.c **** 
 735:Core/Src/main.c ****     if(!HAL_GPIO_ReadPin(GPIOB, incremento))
 736:Core/Src/main.c ****     {
 737:Core/Src/main.c ****       HAL_Delay(250);
 928              		.loc 1 737 7 is_stmt 1 view .LVU226
 929 0006 FA20     		movs	r0, #250
 930 0008 FFF7FEFF 		bl	HAL_Delay
 931              	.LVL72:
 738:Core/Src/main.c ****       variavel++;
 932              		.loc 1 738 7 view .LVU227
 933              		.loc 1 738 15 is_stmt 0 view .LVU228
 934 000c 0135     		adds	r5, r5, #1
 935              	.LVL73:
 936              	.L56:
 739:Core/Src/main.c ****     }
 740:Core/Src/main.c ****     if(!HAL_GPIO_ReadPin(GPIOB, decremento))
 937              		.loc 1 740 5 is_stmt 1 view .LVU229
 938              		.loc 1 740 9 is_stmt 0 view .LVU230
 939 000e 4FF40051 		mov	r1, #8192
 940 0012 1648     		ldr	r0, .L62
 941 0014 FFF7FEFF 		bl	HAL_GPIO_ReadPin
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 31


 942              	.LVL74:
 943              		.loc 1 740 7 view .LVU231
 944 0018 F0B1     		cbz	r0, .L60
 945              	.L54:
 741:Core/Src/main.c ****     {
 742:Core/Src/main.c ****       HAL_Delay(250);
 743:Core/Src/main.c ****       variavel--;
 744:Core/Src/main.c ****     }
 745:Core/Src/main.c ****     
 746:Core/Src/main.c ****     if(!HAL_GPIO_ReadPin(GPIOB, funcao)) 
 946              		.loc 1 746 5 is_stmt 1 view .LVU232
 947              		.loc 1 746 9 is_stmt 0 view .LVU233
 948 001a 4FF40041 		mov	r1, #32768
 949 001e 1348     		ldr	r0, .L62
 950 0020 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 951              	.LVL75:
 952              		.loc 1 746 7 view .LVU234
 953 0024 E8B1     		cbz	r0, .L58
 954              	.L53:
 730:Core/Src/main.c ****   {
 955              		.loc 1 730 15 is_stmt 1 view .LVU235
 732:Core/Src/main.c ****     atualizarDisplay(3, variavel % 10);
 956              		.loc 1 732 5 view .LVU236
 957 0026 124B     		ldr	r3, .L62+4
 958 0028 83FB0523 		smull	r2, r3, r3, r5
 959 002c EC17     		asrs	r4, r5, #31
 960 002e C4EBA304 		rsb	r4, r4, r3, asr #2
 961 0032 2146     		mov	r1, r4
 962 0034 0220     		movs	r0, #2
 963 0036 FFF7FEFF 		bl	atualizarDisplay
 964              	.LVL76:
 733:Core/Src/main.c **** 
 965              		.loc 1 733 5 view .LVU237
 966 003a 04EB8404 		add	r4, r4, r4, lsl #2
 967 003e A5EB4401 		sub	r1, r5, r4, lsl #1
 968 0042 0320     		movs	r0, #3
 969 0044 FFF7FEFF 		bl	atualizarDisplay
 970              	.LVL77:
 735:Core/Src/main.c ****     {
 971              		.loc 1 735 5 view .LVU238
 735:Core/Src/main.c ****     {
 972              		.loc 1 735 9 is_stmt 0 view .LVU239
 973 0048 4FF48051 		mov	r1, #4096
 974 004c 0748     		ldr	r0, .L62
 975 004e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 976              	.LVL78:
 735:Core/Src/main.c ****     {
 977              		.loc 1 735 7 view .LVU240
 978 0052 0028     		cmp	r0, #0
 979 0054 DBD1     		bne	.L56
 735:Core/Src/main.c ****     {
 980              		.loc 1 735 7 view .LVU241
 981 0056 D6E7     		b	.L61
 982              	.L60:
 742:Core/Src/main.c ****       variavel--;
 983              		.loc 1 742 7 is_stmt 1 view .LVU242
 984 0058 FA20     		movs	r0, #250
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 32


 985 005a FFF7FEFF 		bl	HAL_Delay
 986              	.LVL79:
 743:Core/Src/main.c ****     }
 987              		.loc 1 743 7 view .LVU243
 743:Core/Src/main.c ****     }
 988              		.loc 1 743 15 is_stmt 0 view .LVU244
 989 005e 013D     		subs	r5, r5, #1
 990              	.LVL80:
 743:Core/Src/main.c ****     }
 991              		.loc 1 743 15 view .LVU245
 992 0060 DBE7     		b	.L54
 993              	.L58:
 747:Core/Src/main.c ****     { // Verifica se o botão de função foi pressionado novamente para sair do loop
 748:Core/Src/main.c ****       HAL_Delay(250);
 994              		.loc 1 748 7 is_stmt 1 view .LVU246
 995 0062 FA20     		movs	r0, #250
 996 0064 FFF7FEFF 		bl	HAL_Delay
 997              	.LVL81:
 749:Core/Src/main.c ****       flag = 1;
 998              		.loc 1 749 7 view .LVU247
 730:Core/Src/main.c ****   {
 999              		.loc 1 730 15 view .LVU248
 750:Core/Src/main.c ****     }
 751:Core/Src/main.c ****   }
 752:Core/Src/main.c ****   return variavel;
 1000              		.loc 1 752 3 view .LVU249
 753:Core/Src/main.c **** }
 1001              		.loc 1 753 1 is_stmt 0 view .LVU250
 1002 0068 2846     		mov	r0, r5
 1003 006a 38BD     		pop	{r3, r4, r5, pc}
 1004              	.LVL82:
 1005              	.L63:
 1006              		.loc 1 753 1 view .LVU251
 1007              		.align	2
 1008              	.L62:
 1009 006c 00040240 		.word	1073873920
 1010 0070 67666666 		.word	1717986919
 1011              		.cfi_endproc
 1012              	.LFE234:
 1014              		.section	.text.Error_Handler,"ax",%progbits
 1015              		.align	1
 1016              		.global	Error_Handler
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1021              	Error_Handler:
 1022              	.LFB235:
 754:Core/Src/main.c **** /* USER CODE END 4 */
 755:Core/Src/main.c **** 
 756:Core/Src/main.c **** /**
 757:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 758:Core/Src/main.c ****   * @retval None
 759:Core/Src/main.c ****   */
 760:Core/Src/main.c **** void Error_Handler(void)
 761:Core/Src/main.c **** {
 1023              		.loc 1 761 1 is_stmt 1 view -0
 1024              		.cfi_startproc
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 33


 1025              		@ Volatile: function does not return.
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              		@ link register save eliminated.
 762:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 763:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 764:Core/Src/main.c ****   __disable_irq();
 1029              		.loc 1 764 3 view .LVU253
 1030              	.LBB11:
 1031              	.LBI11:
 1032              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 34


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 35


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 36


 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 37


 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 38


 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 39


 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 40


 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 41


 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 42


 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 43


 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 44


 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 45


 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 46


 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 47


 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 48


 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 49


 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 50


 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1033              		.loc 2 960 27 view .LVU254
 1034              	.LBB12:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1035              		.loc 2 962 3 view .LVU255
 1036              		.syntax unified
 1037              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1038 0000 72B6     		cpsid i
 1039              	@ 0 "" 2
 1040              		.thumb
 1041              		.syntax unified
 1042              	.L65:
 1043              	.LBE12:
 1044              	.LBE11:
 765:Core/Src/main.c ****   while (1)
 1045              		.loc 1 765 3 discriminator 1 view .LVU256
 766:Core/Src/main.c ****   {
 767:Core/Src/main.c ****   }
 1046              		.loc 1 767 3 discriminator 1 view .LVU257
 765:Core/Src/main.c ****   while (1)
 1047              		.loc 1 765 9 discriminator 1 view .LVU258
 1048 0002 FEE7     		b	.L65
 1049              		.cfi_endproc
 1050              	.LFE235:
 1052              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1053              		.align	1
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1058              	MX_ADC1_Init:
 1059              	.LFB222:
 334:Core/Src/main.c **** 
 1060              		.loc 1 334 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 16
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064 0000 00B5     		push	{lr}
 1065              	.LCFI12:
 1066              		.cfi_def_cfa_offset 4
 1067              		.cfi_offset 14, -4
 1068 0002 85B0     		sub	sp, sp, #20
 1069              	.LCFI13:
 1070              		.cfi_def_cfa_offset 24
 340:Core/Src/main.c **** 
 1071              		.loc 1 340 3 view .LVU260
 340:Core/Src/main.c **** 
 1072              		.loc 1 340 26 is_stmt 0 view .LVU261
 1073 0004 0023     		movs	r3, #0
 1074 0006 0093     		str	r3, [sp]
 1075 0008 0193     		str	r3, [sp, #4]
 1076 000a 0293     		str	r3, [sp, #8]
 1077 000c 0393     		str	r3, [sp, #12]
 348:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1078              		.loc 1 348 3 is_stmt 1 view .LVU262
 348:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 51


 1079              		.loc 1 348 18 is_stmt 0 view .LVU263
 1080 000e 1448     		ldr	r0, .L72
 1081 0010 144A     		ldr	r2, .L72+4
 1082 0012 0260     		str	r2, [r0]
 349:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1083              		.loc 1 349 3 is_stmt 1 view .LVU264
 349:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1084              		.loc 1 349 29 is_stmt 0 view .LVU265
 1085 0014 4FF48032 		mov	r2, #65536
 1086 0018 4260     		str	r2, [r0, #4]
 350:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1087              		.loc 1 350 3 is_stmt 1 view .LVU266
 350:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1088              		.loc 1 350 25 is_stmt 0 view .LVU267
 1089 001a 8360     		str	r3, [r0, #8]
 351:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1090              		.loc 1 351 3 is_stmt 1 view .LVU268
 351:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1091              		.loc 1 351 27 is_stmt 0 view .LVU269
 1092 001c 0361     		str	r3, [r0, #16]
 352:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1093              		.loc 1 352 3 is_stmt 1 view .LVU270
 352:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1094              		.loc 1 352 33 is_stmt 0 view .LVU271
 1095 001e 0376     		strb	r3, [r0, #24]
 353:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1096              		.loc 1 353 3 is_stmt 1 view .LVU272
 353:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1097              		.loc 1 353 36 is_stmt 0 view .LVU273
 1098 0020 80F82030 		strb	r3, [r0, #32]
 354:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1099              		.loc 1 354 3 is_stmt 1 view .LVU274
 354:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1100              		.loc 1 354 35 is_stmt 0 view .LVU275
 1101 0024 C362     		str	r3, [r0, #44]
 355:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1102              		.loc 1 355 3 is_stmt 1 view .LVU276
 355:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1103              		.loc 1 355 31 is_stmt 0 view .LVU277
 1104 0026 104A     		ldr	r2, .L72+8
 1105 0028 8262     		str	r2, [r0, #40]
 356:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1106              		.loc 1 356 3 is_stmt 1 view .LVU278
 356:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1107              		.loc 1 356 24 is_stmt 0 view .LVU279
 1108 002a C360     		str	r3, [r0, #12]
 357:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1109              		.loc 1 357 3 is_stmt 1 view .LVU280
 357:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1110              		.loc 1 357 30 is_stmt 0 view .LVU281
 1111 002c 0122     		movs	r2, #1
 1112 002e C261     		str	r2, [r0, #28]
 358:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1113              		.loc 1 358 3 is_stmt 1 view .LVU282
 358:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1114              		.loc 1 358 36 is_stmt 0 view .LVU283
 1115 0030 80F83030 		strb	r3, [r0, #48]
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 52


 359:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1116              		.loc 1 359 3 is_stmt 1 view .LVU284
 359:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1117              		.loc 1 359 27 is_stmt 0 view .LVU285
 1118 0034 4261     		str	r2, [r0, #20]
 360:Core/Src/main.c ****   {
 1119              		.loc 1 360 3 is_stmt 1 view .LVU286
 360:Core/Src/main.c ****   {
 1120              		.loc 1 360 7 is_stmt 0 view .LVU287
 1121 0036 FFF7FEFF 		bl	HAL_ADC_Init
 1122              	.LVL83:
 360:Core/Src/main.c ****   {
 1123              		.loc 1 360 6 view .LVU288
 1124 003a 60B9     		cbnz	r0, .L70
 367:Core/Src/main.c ****   sConfig.Rank = 1;
 1125              		.loc 1 367 3 is_stmt 1 view .LVU289
 367:Core/Src/main.c ****   sConfig.Rank = 1;
 1126              		.loc 1 367 19 is_stmt 0 view .LVU290
 1127 003c 0123     		movs	r3, #1
 1128 003e 0093     		str	r3, [sp]
 368:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1129              		.loc 1 368 3 is_stmt 1 view .LVU291
 368:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1130              		.loc 1 368 16 is_stmt 0 view .LVU292
 1131 0040 0193     		str	r3, [sp, #4]
 369:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1132              		.loc 1 369 3 is_stmt 1 view .LVU293
 369:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1133              		.loc 1 369 24 is_stmt 0 view .LVU294
 1134 0042 0023     		movs	r3, #0
 1135 0044 0293     		str	r3, [sp, #8]
 370:Core/Src/main.c ****   {
 1136              		.loc 1 370 3 is_stmt 1 view .LVU295
 370:Core/Src/main.c ****   {
 1137              		.loc 1 370 7 is_stmt 0 view .LVU296
 1138 0046 6946     		mov	r1, sp
 1139 0048 0548     		ldr	r0, .L72
 1140 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1141              	.LVL84:
 370:Core/Src/main.c ****   {
 1142              		.loc 1 370 6 view .LVU297
 1143 004e 20B9     		cbnz	r0, .L71
 378:Core/Src/main.c **** 
 1144              		.loc 1 378 1 view .LVU298
 1145 0050 05B0     		add	sp, sp, #20
 1146              	.LCFI14:
 1147              		.cfi_remember_state
 1148              		.cfi_def_cfa_offset 4
 1149              		@ sp needed
 1150 0052 5DF804FB 		ldr	pc, [sp], #4
 1151              	.L70:
 1152              	.LCFI15:
 1153              		.cfi_restore_state
 362:Core/Src/main.c ****   }
 1154              		.loc 1 362 5 is_stmt 1 view .LVU299
 1155 0056 FFF7FEFF 		bl	Error_Handler
 1156              	.LVL85:
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 53


 1157              	.L71:
 372:Core/Src/main.c ****   }
 1158              		.loc 1 372 5 view .LVU300
 1159 005a FFF7FEFF 		bl	Error_Handler
 1160              	.LVL86:
 1161              	.L73:
 1162 005e 00BF     		.align	2
 1163              	.L72:
 1164 0060 00000000 		.word	.LANCHOR9
 1165 0064 00200140 		.word	1073815552
 1166 0068 0100000F 		.word	251658241
 1167              		.cfi_endproc
 1168              	.LFE222:
 1170              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1171              		.align	1
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1176              	MX_TIM4_Init:
 1177              	.LFB224:
 435:Core/Src/main.c **** 
 1178              		.loc 1 435 1 view -0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 24
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182 0000 00B5     		push	{lr}
 1183              	.LCFI16:
 1184              		.cfi_def_cfa_offset 4
 1185              		.cfi_offset 14, -4
 1186 0002 87B0     		sub	sp, sp, #28
 1187              	.LCFI17:
 1188              		.cfi_def_cfa_offset 32
 441:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1189              		.loc 1 441 3 view .LVU302
 441:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1190              		.loc 1 441 26 is_stmt 0 view .LVU303
 1191 0004 0023     		movs	r3, #0
 1192 0006 0293     		str	r3, [sp, #8]
 1193 0008 0393     		str	r3, [sp, #12]
 1194 000a 0493     		str	r3, [sp, #16]
 1195 000c 0593     		str	r3, [sp, #20]
 442:Core/Src/main.c **** 
 1196              		.loc 1 442 3 is_stmt 1 view .LVU304
 442:Core/Src/main.c **** 
 1197              		.loc 1 442 27 is_stmt 0 view .LVU305
 1198 000e 0093     		str	r3, [sp]
 1199 0010 0193     		str	r3, [sp, #4]
 447:Core/Src/main.c ****   htim4.Init.Prescaler = 9600-1;
 1200              		.loc 1 447 3 is_stmt 1 view .LVU306
 447:Core/Src/main.c ****   htim4.Init.Prescaler = 9600-1;
 1201              		.loc 1 447 18 is_stmt 0 view .LVU307
 1202 0012 1448     		ldr	r0, .L82
 1203 0014 144A     		ldr	r2, .L82+4
 1204 0016 0260     		str	r2, [r0]
 448:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1205              		.loc 1 448 3 is_stmt 1 view .LVU308
 448:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 54


 1206              		.loc 1 448 24 is_stmt 0 view .LVU309
 1207 0018 42F27F52 		movw	r2, #9599
 1208 001c 4260     		str	r2, [r0, #4]
 449:Core/Src/main.c ****   htim4.Init.Period = 10000;
 1209              		.loc 1 449 3 is_stmt 1 view .LVU310
 449:Core/Src/main.c ****   htim4.Init.Period = 10000;
 1210              		.loc 1 449 26 is_stmt 0 view .LVU311
 1211 001e 8360     		str	r3, [r0, #8]
 450:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1212              		.loc 1 450 3 is_stmt 1 view .LVU312
 450:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1213              		.loc 1 450 21 is_stmt 0 view .LVU313
 1214 0020 42F21072 		movw	r2, #10000
 1215 0024 C260     		str	r2, [r0, #12]
 451:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1216              		.loc 1 451 3 is_stmt 1 view .LVU314
 451:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1217              		.loc 1 451 28 is_stmt 0 view .LVU315
 1218 0026 0361     		str	r3, [r0, #16]
 452:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1219              		.loc 1 452 3 is_stmt 1 view .LVU316
 452:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1220              		.loc 1 452 32 is_stmt 0 view .LVU317
 1221 0028 8361     		str	r3, [r0, #24]
 453:Core/Src/main.c ****   {
 1222              		.loc 1 453 3 is_stmt 1 view .LVU318
 453:Core/Src/main.c ****   {
 1223              		.loc 1 453 7 is_stmt 0 view .LVU319
 1224 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1225              	.LVL87:
 453:Core/Src/main.c ****   {
 1226              		.loc 1 453 6 view .LVU320
 1227 002e 90B9     		cbnz	r0, .L79
 457:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1228              		.loc 1 457 3 is_stmt 1 view .LVU321
 457:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1229              		.loc 1 457 34 is_stmt 0 view .LVU322
 1230 0030 4FF48053 		mov	r3, #4096
 1231 0034 0293     		str	r3, [sp, #8]
 458:Core/Src/main.c ****   {
 1232              		.loc 1 458 3 is_stmt 1 view .LVU323
 458:Core/Src/main.c ****   {
 1233              		.loc 1 458 7 is_stmt 0 view .LVU324
 1234 0036 02A9     		add	r1, sp, #8
 1235 0038 0A48     		ldr	r0, .L82
 1236 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1237              	.LVL88:
 458:Core/Src/main.c ****   {
 1238              		.loc 1 458 6 view .LVU325
 1239 003e 60B9     		cbnz	r0, .L80
 462:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1240              		.loc 1 462 3 is_stmt 1 view .LVU326
 462:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1241              		.loc 1 462 37 is_stmt 0 view .LVU327
 1242 0040 0023     		movs	r3, #0
 1243 0042 0093     		str	r3, [sp]
 463:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 55


 1244              		.loc 1 463 3 is_stmt 1 view .LVU328
 463:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1245              		.loc 1 463 33 is_stmt 0 view .LVU329
 1246 0044 0193     		str	r3, [sp, #4]
 464:Core/Src/main.c ****   {
 1247              		.loc 1 464 3 is_stmt 1 view .LVU330
 464:Core/Src/main.c ****   {
 1248              		.loc 1 464 7 is_stmt 0 view .LVU331
 1249 0046 6946     		mov	r1, sp
 1250 0048 0648     		ldr	r0, .L82
 1251 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1252              	.LVL89:
 464:Core/Src/main.c ****   {
 1253              		.loc 1 464 6 view .LVU332
 1254 004e 30B9     		cbnz	r0, .L81
 472:Core/Src/main.c **** 
 1255              		.loc 1 472 1 view .LVU333
 1256 0050 07B0     		add	sp, sp, #28
 1257              	.LCFI18:
 1258              		.cfi_remember_state
 1259              		.cfi_def_cfa_offset 4
 1260              		@ sp needed
 1261 0052 5DF804FB 		ldr	pc, [sp], #4
 1262              	.L79:
 1263              	.LCFI19:
 1264              		.cfi_restore_state
 455:Core/Src/main.c ****   }
 1265              		.loc 1 455 5 is_stmt 1 view .LVU334
 1266 0056 FFF7FEFF 		bl	Error_Handler
 1267              	.LVL90:
 1268              	.L80:
 460:Core/Src/main.c ****   }
 1269              		.loc 1 460 5 view .LVU335
 1270 005a FFF7FEFF 		bl	Error_Handler
 1271              	.LVL91:
 1272              	.L81:
 466:Core/Src/main.c ****   }
 1273              		.loc 1 466 5 view .LVU336
 1274 005e FFF7FEFF 		bl	Error_Handler
 1275              	.LVL92:
 1276              	.L83:
 1277 0062 00BF     		.align	2
 1278              	.L82:
 1279 0064 00000000 		.word	.LANCHOR10
 1280 0068 00080040 		.word	1073743872
 1281              		.cfi_endproc
 1282              	.LFE224:
 1284              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1285              		.align	1
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1290              	MX_TIM3_Init:
 1291              	.LFB223:
 386:Core/Src/main.c **** 
 1292              		.loc 1 386 1 view -0
 1293              		.cfi_startproc
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 56


 1294              		@ args = 0, pretend = 0, frame = 40
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296 0000 00B5     		push	{lr}
 1297              	.LCFI20:
 1298              		.cfi_def_cfa_offset 4
 1299              		.cfi_offset 14, -4
 1300 0002 8BB0     		sub	sp, sp, #44
 1301              	.LCFI21:
 1302              		.cfi_def_cfa_offset 48
 392:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1303              		.loc 1 392 3 view .LVU338
 392:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1304              		.loc 1 392 27 is_stmt 0 view .LVU339
 1305 0004 0023     		movs	r3, #0
 1306 0006 0893     		str	r3, [sp, #32]
 1307 0008 0993     		str	r3, [sp, #36]
 393:Core/Src/main.c **** 
 1308              		.loc 1 393 3 is_stmt 1 view .LVU340
 393:Core/Src/main.c **** 
 1309              		.loc 1 393 22 is_stmt 0 view .LVU341
 1310 000a 0193     		str	r3, [sp, #4]
 1311 000c 0293     		str	r3, [sp, #8]
 1312 000e 0393     		str	r3, [sp, #12]
 1313 0010 0493     		str	r3, [sp, #16]
 1314 0012 0593     		str	r3, [sp, #20]
 1315 0014 0693     		str	r3, [sp, #24]
 1316 0016 0793     		str	r3, [sp, #28]
 398:Core/Src/main.c ****   htim3.Init.Prescaler = 9600-1;
 1317              		.loc 1 398 3 is_stmt 1 view .LVU342
 398:Core/Src/main.c ****   htim3.Init.Prescaler = 9600-1;
 1318              		.loc 1 398 18 is_stmt 0 view .LVU343
 1319 0018 1848     		ldr	r0, .L92
 1320 001a 194A     		ldr	r2, .L92+4
 1321 001c 0260     		str	r2, [r0]
 399:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1322              		.loc 1 399 3 is_stmt 1 view .LVU344
 399:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1323              		.loc 1 399 24 is_stmt 0 view .LVU345
 1324 001e 42F27F52 		movw	r2, #9599
 1325 0022 4260     		str	r2, [r0, #4]
 400:Core/Src/main.c ****   htim3.Init.Period = 1000;
 1326              		.loc 1 400 3 is_stmt 1 view .LVU346
 400:Core/Src/main.c ****   htim3.Init.Period = 1000;
 1327              		.loc 1 400 26 is_stmt 0 view .LVU347
 1328 0024 8360     		str	r3, [r0, #8]
 401:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1329              		.loc 1 401 3 is_stmt 1 view .LVU348
 401:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1330              		.loc 1 401 21 is_stmt 0 view .LVU349
 1331 0026 4FF47A72 		mov	r2, #1000
 1332 002a C260     		str	r2, [r0, #12]
 402:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1333              		.loc 1 402 3 is_stmt 1 view .LVU350
 402:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1334              		.loc 1 402 28 is_stmt 0 view .LVU351
 1335 002c 0361     		str	r3, [r0, #16]
 403:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 57


 1336              		.loc 1 403 3 is_stmt 1 view .LVU352
 403:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1337              		.loc 1 403 32 is_stmt 0 view .LVU353
 1338 002e 8361     		str	r3, [r0, #24]
 404:Core/Src/main.c ****   {
 1339              		.loc 1 404 3 is_stmt 1 view .LVU354
 404:Core/Src/main.c ****   {
 1340              		.loc 1 404 7 is_stmt 0 view .LVU355
 1341 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1342              	.LVL93:
 404:Core/Src/main.c ****   {
 1343              		.loc 1 404 6 view .LVU356
 1344 0034 E0B9     		cbnz	r0, .L89
 408:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1345              		.loc 1 408 3 is_stmt 1 view .LVU357
 408:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1346              		.loc 1 408 37 is_stmt 0 view .LVU358
 1347 0036 0023     		movs	r3, #0
 1348 0038 0893     		str	r3, [sp, #32]
 409:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1349              		.loc 1 409 3 is_stmt 1 view .LVU359
 409:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1350              		.loc 1 409 33 is_stmt 0 view .LVU360
 1351 003a 0993     		str	r3, [sp, #36]
 410:Core/Src/main.c ****   {
 1352              		.loc 1 410 3 is_stmt 1 view .LVU361
 410:Core/Src/main.c ****   {
 1353              		.loc 1 410 7 is_stmt 0 view .LVU362
 1354 003c 08A9     		add	r1, sp, #32
 1355 003e 0F48     		ldr	r0, .L92
 1356 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1357              	.LVL94:
 410:Core/Src/main.c ****   {
 1358              		.loc 1 410 6 view .LVU363
 1359 0044 B0B9     		cbnz	r0, .L90
 414:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1360              		.loc 1 414 3 is_stmt 1 view .LVU364
 414:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1361              		.loc 1 414 20 is_stmt 0 view .LVU365
 1362 0046 6023     		movs	r3, #96
 1363 0048 0193     		str	r3, [sp, #4]
 415:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1364              		.loc 1 415 3 is_stmt 1 view .LVU366
 415:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1365              		.loc 1 415 19 is_stmt 0 view .LVU367
 1366 004a 4FF4FA73 		mov	r3, #500
 1367 004e 0293     		str	r3, [sp, #8]
 416:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1368              		.loc 1 416 3 is_stmt 1 view .LVU368
 416:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1369              		.loc 1 416 24 is_stmt 0 view .LVU369
 1370 0050 0023     		movs	r3, #0
 1371 0052 0393     		str	r3, [sp, #12]
 417:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1372              		.loc 1 417 3 is_stmt 1 view .LVU370
 417:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1373              		.loc 1 417 24 is_stmt 0 view .LVU371
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 58


 1374 0054 0593     		str	r3, [sp, #20]
 418:Core/Src/main.c ****   {
 1375              		.loc 1 418 3 is_stmt 1 view .LVU372
 418:Core/Src/main.c ****   {
 1376              		.loc 1 418 7 is_stmt 0 view .LVU373
 1377 0056 0422     		movs	r2, #4
 1378 0058 0DEB0201 		add	r1, sp, r2
 1379 005c 0748     		ldr	r0, .L92
 1380 005e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1381              	.LVL95:
 418:Core/Src/main.c ****   {
 1382              		.loc 1 418 6 view .LVU374
 1383 0062 48B9     		cbnz	r0, .L91
 425:Core/Src/main.c **** 
 1384              		.loc 1 425 3 is_stmt 1 view .LVU375
 1385 0064 0548     		ldr	r0, .L92
 1386 0066 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1387              	.LVL96:
 427:Core/Src/main.c **** 
 1388              		.loc 1 427 1 is_stmt 0 view .LVU376
 1389 006a 0BB0     		add	sp, sp, #44
 1390              	.LCFI22:
 1391              		.cfi_remember_state
 1392              		.cfi_def_cfa_offset 4
 1393              		@ sp needed
 1394 006c 5DF804FB 		ldr	pc, [sp], #4
 1395              	.L89:
 1396              	.LCFI23:
 1397              		.cfi_restore_state
 406:Core/Src/main.c ****   }
 1398              		.loc 1 406 5 is_stmt 1 view .LVU377
 1399 0070 FFF7FEFF 		bl	Error_Handler
 1400              	.LVL97:
 1401              	.L90:
 412:Core/Src/main.c ****   }
 1402              		.loc 1 412 5 view .LVU378
 1403 0074 FFF7FEFF 		bl	Error_Handler
 1404              	.LVL98:
 1405              	.L91:
 420:Core/Src/main.c ****   }
 1406              		.loc 1 420 5 view .LVU379
 1407 0078 FFF7FEFF 		bl	Error_Handler
 1408              	.LVL99:
 1409              	.L93:
 1410              		.align	2
 1411              	.L92:
 1412 007c 00000000 		.word	.LANCHOR7
 1413 0080 00040040 		.word	1073742848
 1414              		.cfi_endproc
 1415              	.LFE223:
 1417              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1418              		.align	1
 1419              		.syntax unified
 1420              		.thumb
 1421              		.thumb_func
 1423              	MX_TIM5_Init:
 1424              	.LFB225:
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 59


 480:Core/Src/main.c **** 
 1425              		.loc 1 480 1 view -0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 24
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429 0000 00B5     		push	{lr}
 1430              	.LCFI24:
 1431              		.cfi_def_cfa_offset 4
 1432              		.cfi_offset 14, -4
 1433 0002 87B0     		sub	sp, sp, #28
 1434              	.LCFI25:
 1435              		.cfi_def_cfa_offset 32
 486:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1436              		.loc 1 486 3 view .LVU381
 486:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1437              		.loc 1 486 26 is_stmt 0 view .LVU382
 1438 0004 0023     		movs	r3, #0
 1439 0006 0293     		str	r3, [sp, #8]
 1440 0008 0393     		str	r3, [sp, #12]
 1441 000a 0493     		str	r3, [sp, #16]
 1442 000c 0593     		str	r3, [sp, #20]
 487:Core/Src/main.c **** 
 1443              		.loc 1 487 3 is_stmt 1 view .LVU383
 487:Core/Src/main.c **** 
 1444              		.loc 1 487 27 is_stmt 0 view .LVU384
 1445 000e 0093     		str	r3, [sp]
 1446 0010 0193     		str	r3, [sp, #4]
 492:Core/Src/main.c ****   htim5.Init.Prescaler = 9600-1;
 1447              		.loc 1 492 3 is_stmt 1 view .LVU385
 492:Core/Src/main.c ****   htim5.Init.Prescaler = 9600-1;
 1448              		.loc 1 492 18 is_stmt 0 view .LVU386
 1449 0012 1448     		ldr	r0, .L102
 1450 0014 144A     		ldr	r2, .L102+4
 1451 0016 0260     		str	r2, [r0]
 493:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1452              		.loc 1 493 3 is_stmt 1 view .LVU387
 493:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1453              		.loc 1 493 24 is_stmt 0 view .LVU388
 1454 0018 42F27F52 		movw	r2, #9599
 1455 001c 4260     		str	r2, [r0, #4]
 494:Core/Src/main.c ****   htim5.Init.Period = 10000;
 1456              		.loc 1 494 3 is_stmt 1 view .LVU389
 494:Core/Src/main.c ****   htim5.Init.Period = 10000;
 1457              		.loc 1 494 26 is_stmt 0 view .LVU390
 1458 001e 8360     		str	r3, [r0, #8]
 495:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1459              		.loc 1 495 3 is_stmt 1 view .LVU391
 495:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1460              		.loc 1 495 21 is_stmt 0 view .LVU392
 1461 0020 42F21072 		movw	r2, #10000
 1462 0024 C260     		str	r2, [r0, #12]
 496:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1463              		.loc 1 496 3 is_stmt 1 view .LVU393
 496:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1464              		.loc 1 496 28 is_stmt 0 view .LVU394
 1465 0026 0361     		str	r3, [r0, #16]
 497:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 60


 1466              		.loc 1 497 3 is_stmt 1 view .LVU395
 497:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1467              		.loc 1 497 32 is_stmt 0 view .LVU396
 1468 0028 8361     		str	r3, [r0, #24]
 498:Core/Src/main.c ****   {
 1469              		.loc 1 498 3 is_stmt 1 view .LVU397
 498:Core/Src/main.c ****   {
 1470              		.loc 1 498 7 is_stmt 0 view .LVU398
 1471 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1472              	.LVL100:
 498:Core/Src/main.c ****   {
 1473              		.loc 1 498 6 view .LVU399
 1474 002e 90B9     		cbnz	r0, .L99
 502:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1475              		.loc 1 502 3 is_stmt 1 view .LVU400
 502:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1476              		.loc 1 502 34 is_stmt 0 view .LVU401
 1477 0030 4FF48053 		mov	r3, #4096
 1478 0034 0293     		str	r3, [sp, #8]
 503:Core/Src/main.c ****   {
 1479              		.loc 1 503 3 is_stmt 1 view .LVU402
 503:Core/Src/main.c ****   {
 1480              		.loc 1 503 7 is_stmt 0 view .LVU403
 1481 0036 02A9     		add	r1, sp, #8
 1482 0038 0A48     		ldr	r0, .L102
 1483 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1484              	.LVL101:
 503:Core/Src/main.c ****   {
 1485              		.loc 1 503 6 view .LVU404
 1486 003e 60B9     		cbnz	r0, .L100
 507:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1487              		.loc 1 507 3 is_stmt 1 view .LVU405
 507:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1488              		.loc 1 507 37 is_stmt 0 view .LVU406
 1489 0040 0023     		movs	r3, #0
 1490 0042 0093     		str	r3, [sp]
 508:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1491              		.loc 1 508 3 is_stmt 1 view .LVU407
 508:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1492              		.loc 1 508 33 is_stmt 0 view .LVU408
 1493 0044 0193     		str	r3, [sp, #4]
 509:Core/Src/main.c ****   {
 1494              		.loc 1 509 3 is_stmt 1 view .LVU409
 509:Core/Src/main.c ****   {
 1495              		.loc 1 509 7 is_stmt 0 view .LVU410
 1496 0046 6946     		mov	r1, sp
 1497 0048 0648     		ldr	r0, .L102
 1498 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1499              	.LVL102:
 509:Core/Src/main.c ****   {
 1500              		.loc 1 509 6 view .LVU411
 1501 004e 30B9     		cbnz	r0, .L101
 517:Core/Src/main.c **** 
 1502              		.loc 1 517 1 view .LVU412
 1503 0050 07B0     		add	sp, sp, #28
 1504              	.LCFI26:
 1505              		.cfi_remember_state
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 61


 1506              		.cfi_def_cfa_offset 4
 1507              		@ sp needed
 1508 0052 5DF804FB 		ldr	pc, [sp], #4
 1509              	.L99:
 1510              	.LCFI27:
 1511              		.cfi_restore_state
 500:Core/Src/main.c ****   }
 1512              		.loc 1 500 5 is_stmt 1 view .LVU413
 1513 0056 FFF7FEFF 		bl	Error_Handler
 1514              	.LVL103:
 1515              	.L100:
 505:Core/Src/main.c ****   }
 1516              		.loc 1 505 5 view .LVU414
 1517 005a FFF7FEFF 		bl	Error_Handler
 1518              	.LVL104:
 1519              	.L101:
 511:Core/Src/main.c ****   }
 1520              		.loc 1 511 5 view .LVU415
 1521 005e FFF7FEFF 		bl	Error_Handler
 1522              	.LVL105:
 1523              	.L103:
 1524 0062 00BF     		.align	2
 1525              	.L102:
 1526 0064 00000000 		.word	.LANCHOR11
 1527 0068 000C0040 		.word	1073744896
 1528              		.cfi_endproc
 1529              	.LFE225:
 1531              		.section	.text.SystemClock_Config,"ax",%progbits
 1532              		.align	1
 1533              		.global	SystemClock_Config
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1538              	SystemClock_Config:
 1539              	.LFB221:
 288:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1540              		.loc 1 288 1 view -0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 80
 1543              		@ frame_needed = 0, uses_anonymous_args = 0
 1544 0000 00B5     		push	{lr}
 1545              	.LCFI28:
 1546              		.cfi_def_cfa_offset 4
 1547              		.cfi_offset 14, -4
 1548 0002 95B0     		sub	sp, sp, #84
 1549              	.LCFI29:
 1550              		.cfi_def_cfa_offset 88
 289:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1551              		.loc 1 289 3 view .LVU417
 289:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1552              		.loc 1 289 22 is_stmt 0 view .LVU418
 1553 0004 3022     		movs	r2, #48
 1554 0006 0021     		movs	r1, #0
 1555 0008 08A8     		add	r0, sp, #32
 1556 000a FFF7FEFF 		bl	memset
 1557              	.LVL106:
 290:Core/Src/main.c **** 
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 62


 1558              		.loc 1 290 3 is_stmt 1 view .LVU419
 290:Core/Src/main.c **** 
 1559              		.loc 1 290 22 is_stmt 0 view .LVU420
 1560 000e 0023     		movs	r3, #0
 1561 0010 0393     		str	r3, [sp, #12]
 1562 0012 0493     		str	r3, [sp, #16]
 1563 0014 0593     		str	r3, [sp, #20]
 1564 0016 0693     		str	r3, [sp, #24]
 1565 0018 0793     		str	r3, [sp, #28]
 294:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1566              		.loc 1 294 3 is_stmt 1 view .LVU421
 1567              	.LBB13:
 294:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1568              		.loc 1 294 3 view .LVU422
 1569 001a 0193     		str	r3, [sp, #4]
 294:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1570              		.loc 1 294 3 view .LVU423
 1571 001c 1F4A     		ldr	r2, .L110
 1572 001e 116C     		ldr	r1, [r2, #64]
 1573 0020 41F08051 		orr	r1, r1, #268435456
 1574 0024 1164     		str	r1, [r2, #64]
 294:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1575              		.loc 1 294 3 view .LVU424
 1576 0026 126C     		ldr	r2, [r2, #64]
 1577 0028 02F08052 		and	r2, r2, #268435456
 1578 002c 0192     		str	r2, [sp, #4]
 294:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1579              		.loc 1 294 3 view .LVU425
 1580 002e 019A     		ldr	r2, [sp, #4]
 1581              	.LBE13:
 294:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1582              		.loc 1 294 3 view .LVU426
 295:Core/Src/main.c **** 
 1583              		.loc 1 295 3 view .LVU427
 1584              	.LBB14:
 295:Core/Src/main.c **** 
 1585              		.loc 1 295 3 view .LVU428
 1586 0030 0293     		str	r3, [sp, #8]
 295:Core/Src/main.c **** 
 1587              		.loc 1 295 3 view .LVU429
 1588 0032 1B4B     		ldr	r3, .L110+4
 1589 0034 1A68     		ldr	r2, [r3]
 1590 0036 42F44042 		orr	r2, r2, #49152
 1591 003a 1A60     		str	r2, [r3]
 295:Core/Src/main.c **** 
 1592              		.loc 1 295 3 view .LVU430
 1593 003c 1B68     		ldr	r3, [r3]
 1594 003e 03F44043 		and	r3, r3, #49152
 1595 0042 0293     		str	r3, [sp, #8]
 295:Core/Src/main.c **** 
 1596              		.loc 1 295 3 view .LVU431
 1597 0044 029B     		ldr	r3, [sp, #8]
 1598              	.LBE14:
 295:Core/Src/main.c **** 
 1599              		.loc 1 295 3 view .LVU432
 300:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1600              		.loc 1 300 3 view .LVU433
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 63


 300:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1601              		.loc 1 300 36 is_stmt 0 view .LVU434
 1602 0046 0123     		movs	r3, #1
 1603 0048 0893     		str	r3, [sp, #32]
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1604              		.loc 1 301 3 is_stmt 1 view .LVU435
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1605              		.loc 1 301 30 is_stmt 0 view .LVU436
 1606 004a 4FF48033 		mov	r3, #65536
 1607 004e 0993     		str	r3, [sp, #36]
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1608              		.loc 1 302 3 is_stmt 1 view .LVU437
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1609              		.loc 1 302 34 is_stmt 0 view .LVU438
 1610 0050 0223     		movs	r3, #2
 1611 0052 0E93     		str	r3, [sp, #56]
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 1612              		.loc 1 303 3 is_stmt 1 view .LVU439
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 1613              		.loc 1 303 35 is_stmt 0 view .LVU440
 1614 0054 4FF48002 		mov	r2, #4194304
 1615 0058 0F92     		str	r2, [sp, #60]
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1616              		.loc 1 304 3 is_stmt 1 view .LVU441
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1617              		.loc 1 304 30 is_stmt 0 view .LVU442
 1618 005a 1922     		movs	r2, #25
 1619 005c 1092     		str	r2, [sp, #64]
 305:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1620              		.loc 1 305 3 is_stmt 1 view .LVU443
 305:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1621              		.loc 1 305 30 is_stmt 0 view .LVU444
 1622 005e C022     		movs	r2, #192
 1623 0060 1192     		str	r2, [sp, #68]
 306:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1624              		.loc 1 306 3 is_stmt 1 view .LVU445
 306:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1625              		.loc 1 306 30 is_stmt 0 view .LVU446
 1626 0062 1293     		str	r3, [sp, #72]
 307:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1627              		.loc 1 307 3 is_stmt 1 view .LVU447
 307:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1628              		.loc 1 307 30 is_stmt 0 view .LVU448
 1629 0064 0423     		movs	r3, #4
 1630 0066 1393     		str	r3, [sp, #76]
 308:Core/Src/main.c ****   {
 1631              		.loc 1 308 3 is_stmt 1 view .LVU449
 308:Core/Src/main.c ****   {
 1632              		.loc 1 308 7 is_stmt 0 view .LVU450
 1633 0068 08A8     		add	r0, sp, #32
 1634 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1635              	.LVL107:
 308:Core/Src/main.c ****   {
 1636              		.loc 1 308 6 view .LVU451
 1637 006e 88B9     		cbnz	r0, .L108
 315:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1638              		.loc 1 315 3 is_stmt 1 view .LVU452
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 64


 315:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1639              		.loc 1 315 31 is_stmt 0 view .LVU453
 1640 0070 0F23     		movs	r3, #15
 1641 0072 0393     		str	r3, [sp, #12]
 317:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1642              		.loc 1 317 3 is_stmt 1 view .LVU454
 317:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1643              		.loc 1 317 34 is_stmt 0 view .LVU455
 1644 0074 0223     		movs	r3, #2
 1645 0076 0493     		str	r3, [sp, #16]
 318:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1646              		.loc 1 318 3 is_stmt 1 view .LVU456
 318:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1647              		.loc 1 318 35 is_stmt 0 view .LVU457
 1648 0078 0023     		movs	r3, #0
 1649 007a 0593     		str	r3, [sp, #20]
 319:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1650              		.loc 1 319 3 is_stmt 1 view .LVU458
 319:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1651              		.loc 1 319 36 is_stmt 0 view .LVU459
 1652 007c 4FF48052 		mov	r2, #4096
 1653 0080 0692     		str	r2, [sp, #24]
 320:Core/Src/main.c **** 
 1654              		.loc 1 320 3 is_stmt 1 view .LVU460
 320:Core/Src/main.c **** 
 1655              		.loc 1 320 36 is_stmt 0 view .LVU461
 1656 0082 0793     		str	r3, [sp, #28]
 322:Core/Src/main.c ****   {
 1657              		.loc 1 322 3 is_stmt 1 view .LVU462
 322:Core/Src/main.c ****   {
 1658              		.loc 1 322 7 is_stmt 0 view .LVU463
 1659 0084 0321     		movs	r1, #3
 1660 0086 03A8     		add	r0, sp, #12
 1661 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1662              	.LVL108:
 322:Core/Src/main.c ****   {
 1663              		.loc 1 322 6 view .LVU464
 1664 008c 20B9     		cbnz	r0, .L109
 326:Core/Src/main.c **** 
 1665              		.loc 1 326 1 view .LVU465
 1666 008e 15B0     		add	sp, sp, #84
 1667              	.LCFI30:
 1668              		.cfi_remember_state
 1669              		.cfi_def_cfa_offset 4
 1670              		@ sp needed
 1671 0090 5DF804FB 		ldr	pc, [sp], #4
 1672              	.L108:
 1673              	.LCFI31:
 1674              		.cfi_restore_state
 310:Core/Src/main.c ****   }
 1675              		.loc 1 310 5 is_stmt 1 view .LVU466
 1676 0094 FFF7FEFF 		bl	Error_Handler
 1677              	.LVL109:
 1678              	.L109:
 324:Core/Src/main.c ****   }
 1679              		.loc 1 324 5 view .LVU467
 1680 0098 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 65


 1681              	.LVL110:
 1682              	.L111:
 1683              		.align	2
 1684              	.L110:
 1685 009c 00380240 		.word	1073887232
 1686 00a0 00700040 		.word	1073770496
 1687              		.cfi_endproc
 1688              	.LFE221:
 1690              		.section	.text.main,"ax",%progbits
 1691              		.align	1
 1692              		.global	main
 1693              		.syntax unified
 1694              		.thumb
 1695              		.thumb_func
 1697              	main:
 1698              	.LFB220:
 160:Core/Src/main.c **** 
 1699              		.loc 1 160 1 view -0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703 0000 38B5     		push	{r3, r4, r5, lr}
 1704              	.LCFI32:
 1705              		.cfi_def_cfa_offset 16
 1706              		.cfi_offset 3, -16
 1707              		.cfi_offset 4, -12
 1708              		.cfi_offset 5, -8
 1709              		.cfi_offset 14, -4
 169:Core/Src/main.c **** 
 1710              		.loc 1 169 3 view .LVU469
 1711 0002 FFF7FEFF 		bl	HAL_Init
 1712              	.LVL111:
 176:Core/Src/main.c **** 
 1713              		.loc 1 176 3 view .LVU470
 1714 0006 FFF7FEFF 		bl	SystemClock_Config
 1715              	.LVL112:
 183:Core/Src/main.c ****   MX_ADC1_Init();
 1716              		.loc 1 183 3 view .LVU471
 1717 000a FFF7FEFF 		bl	MX_GPIO_Init
 1718              	.LVL113:
 184:Core/Src/main.c ****   MX_TIM4_Init();
 1719              		.loc 1 184 3 view .LVU472
 1720 000e FFF7FEFF 		bl	MX_ADC1_Init
 1721              	.LVL114:
 185:Core/Src/main.c ****   MX_TIM3_Init();
 1722              		.loc 1 185 3 view .LVU473
 1723 0012 FFF7FEFF 		bl	MX_TIM4_Init
 1724              	.LVL115:
 186:Core/Src/main.c ****   MX_TIM5_Init();
 1725              		.loc 1 186 3 view .LVU474
 1726 0016 FFF7FEFF 		bl	MX_TIM3_Init
 1727              	.LVL116:
 187:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1728              		.loc 1 187 3 view .LVU475
 1729 001a FFF7FEFF 		bl	MX_TIM5_Init
 1730              	.LVL117:
 189:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, refrigeracaoB, 1);
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 66


 1731              		.loc 1 189 3 view .LVU476
 1732 001e 0022     		movs	r2, #0
 1733 0020 4FF40051 		mov	r1, #8192
 1734 0024 8548     		ldr	r0, .L137
 1735 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1736              	.LVL118:
 190:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, aquecimentoA, 1);
 1737              		.loc 1 190 3 view .LVU477
 1738 002a 854D     		ldr	r5, .L137+4
 1739 002c 0122     		movs	r2, #1
 1740 002e 0821     		movs	r1, #8
 1741 0030 2846     		mov	r0, r5
 1742 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1743              	.LVL119:
 191:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, irrigacaoA, 1);
 1744              		.loc 1 191 3 view .LVU478
 1745 0036 834C     		ldr	r4, .L137+8
 1746 0038 0122     		movs	r2, #1
 1747 003a 4FF40061 		mov	r1, #2048
 1748 003e 2046     		mov	r0, r4
 1749 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1750              	.LVL120:
 192:Core/Src/main.c ****   HAL_Delay(1000);
 1751              		.loc 1 192 3 view .LVU479
 1752 0044 0122     		movs	r2, #1
 1753 0046 4FF48071 		mov	r1, #256
 1754 004a 2046     		mov	r0, r4
 1755 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1756              	.LVL121:
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, refrigeracaoB, 0);
 1757              		.loc 1 193 3 view .LVU480
 1758 0050 4FF47A70 		mov	r0, #1000
 1759 0054 FFF7FEFF 		bl	HAL_Delay
 1760              	.LVL122:
 194:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, aquecimentoA, 0);
 1761              		.loc 1 194 3 view .LVU481
 1762 0058 0022     		movs	r2, #0
 1763 005a 0821     		movs	r1, #8
 1764 005c 2846     		mov	r0, r5
 1765 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1766              	.LVL123:
 195:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, irrigacaoA, 0);
 1767              		.loc 1 195 3 view .LVU482
 1768 0062 0022     		movs	r2, #0
 1769 0064 4FF40061 		mov	r1, #2048
 1770 0068 2046     		mov	r0, r4
 1771 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1772              	.LVL124:
 196:Core/Src/main.c ****   register1(0);
 1773              		.loc 1 196 3 view .LVU483
 1774 006e 0022     		movs	r2, #0
 1775 0070 4FF48071 		mov	r1, #256
 1776 0074 2046     		mov	r0, r4
 1777 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1778              	.LVL125:
 197:Core/Src/main.c ****   register2(0);
 1779              		.loc 1 197 3 view .LVU484
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 67


 1780 007a 0020     		movs	r0, #0
 1781 007c FFF7FEFF 		bl	register1
 1782              	.LVL126:
 198:Core/Src/main.c ****   register3(0);
 1783              		.loc 1 198 3 view .LVU485
 1784 0080 0020     		movs	r0, #0
 1785 0082 FFF7FEFF 		bl	register2
 1786              	.LVL127:
 199:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 1787              		.loc 1 199 3 view .LVU486
 1788 0086 0020     		movs	r0, #0
 1789 0088 FFF7FEFF 		bl	register3
 1790              	.LVL128:
 200:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim5);
 1791              		.loc 1 200 3 view .LVU487
 1792 008c 6E48     		ldr	r0, .L137+12
 1793 008e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1794              	.LVL129:
 201:Core/Src/main.c ****   /* USER CODE END 2 */
 1795              		.loc 1 201 3 view .LVU488
 1796 0092 6E48     		ldr	r0, .L137+16
 1797 0094 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1798              	.LVL130:
 1799 0098 BEE0     		b	.L130
 1800              	.LVL131:
 1801              	.L120:
 1802              	.LBB15:
 221:Core/Src/main.c ****               atualizarDisplay(3, 10);
 1803              		.loc 1 221 15 view .LVU489
 1804 009a 0A21     		movs	r1, #10
 1805 009c 0220     		movs	r0, #2
 1806 009e FFF7FEFF 		bl	atualizarDisplay
 1807              	.LVL132:
 222:Core/Src/main.c ****               break;
 1808              		.loc 1 222 15 view .LVU490
 1809 00a2 0A21     		movs	r1, #10
 1810 00a4 0320     		movs	r0, #3
 1811 00a6 FFF7FEFF 		bl	atualizarDisplay
 1812              	.LVL133:
 223:Core/Src/main.c ****             case 1: 
 1813              		.loc 1 223 15 view .LVU491
 1814              	.L114:
 242:Core/Src/main.c ****         { // Seleciona a opção do menu
 1815              		.loc 1 242 9 view .LVU492
 242:Core/Src/main.c ****         { // Seleciona a opção do menu
 1816              		.loc 1 242 14 is_stmt 0 view .LVU493
 1817 00aa 4FF40041 		mov	r1, #32768
 1818 00ae 6448     		ldr	r0, .L137+4
 1819 00b0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1820              	.LVL134:
 242:Core/Src/main.c ****         { // Seleciona a opção do menu
 1821              		.loc 1 242 12 view .LVU494
 1822 00b4 0028     		cmp	r0, #0
 1823 00b6 66D0     		beq	.L135
 1824              	.L121:
 249:Core/Src/main.c ****         { // Verifica se o botão de incremento ou decremento foi pressionado
 1825              		.loc 1 249 9 is_stmt 1 view .LVU495
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 68


 249:Core/Src/main.c ****         { // Verifica se o botão de incremento ou decremento foi pressionado
 1826              		.loc 1 249 14 is_stmt 0 view .LVU496
 1827 00b8 4FF48051 		mov	r1, #4096
 1828 00bc 6048     		ldr	r0, .L137+4
 1829 00be FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1830              	.LVL135:
 249:Core/Src/main.c ****         { // Verifica se o botão de incremento ou decremento foi pressionado
 1831              		.loc 1 249 12 view .LVU497
 1832 00c2 0028     		cmp	r0, #0
 1833 00c4 6DD1     		bne	.L136
 1834              	.L122:
 251:Core/Src/main.c ****           switch (menu_opcao)
 1835              		.loc 1 251 11 is_stmt 1 view .LVU498
 1836 00c6 FA20     		movs	r0, #250
 1837 00c8 FFF7FEFF 		bl	HAL_Delay
 1838              	.LVL136:
 252:Core/Src/main.c ****           {
 1839              		.loc 1 252 11 view .LVU499
 1840 00cc 604B     		ldr	r3, .L137+20
 1841 00ce 1B68     		ldr	r3, [r3]
 1842 00d0 042B     		cmp	r3, #4
 1843 00d2 6DD8     		bhi	.L129
 1844 00d4 DFE803F0 		tbb	[pc, r3]
 1845              	.L125:
 1846 00d8 9A       		.byte	(.L113-.L125)/2
 1847 00d9 82       		.byte	(.L128-.L125)/2
 1848 00da 88       		.byte	(.L127-.L125)/2
 1849 00db 8E       		.byte	(.L126-.L125)/2
 1850 00dc 94       		.byte	(.L124-.L125)/2
 1851 00dd 00       		.p2align 1
 1852              	.L119:
 225:Core/Src/main.c ****               atualizarDisplay(3, temp_min%10);
 1853              		.loc 1 225 15 view .LVU500
 225:Core/Src/main.c ****               atualizarDisplay(3, temp_min%10);
 1854              		.loc 1 225 43 is_stmt 0 view .LVU501
 1855 00de 5D4D     		ldr	r5, .L137+24
 1856 00e0 2968     		ldr	r1, [r5]
 1857 00e2 5D4C     		ldr	r4, .L137+28
 1858 00e4 A4FB0131 		umull	r3, r1, r4, r1
 225:Core/Src/main.c ****               atualizarDisplay(3, temp_min%10);
 1859              		.loc 1 225 15 view .LVU502
 1860 00e8 C908     		lsrs	r1, r1, #3
 1861 00ea 0220     		movs	r0, #2
 1862 00ec FFF7FEFF 		bl	atualizarDisplay
 1863              	.LVL137:
 226:Core/Src/main.c ****               break;
 1864              		.loc 1 226 15 is_stmt 1 view .LVU503
 226:Core/Src/main.c ****               break;
 1865              		.loc 1 226 43 is_stmt 0 view .LVU504
 1866 00f0 2968     		ldr	r1, [r5]
 1867 00f2 A4FB0134 		umull	r3, r4, r4, r1
 1868 00f6 E408     		lsrs	r4, r4, #3
 1869 00f8 04EB8404 		add	r4, r4, r4, lsl #2
 226:Core/Src/main.c ****               break;
 1870              		.loc 1 226 15 view .LVU505
 1871 00fc A1EB4401 		sub	r1, r1, r4, lsl #1
 1872 0100 0320     		movs	r0, #3
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 69


 1873 0102 FFF7FEFF 		bl	atualizarDisplay
 1874              	.LVL138:
 227:Core/Src/main.c ****             case 2:
 1875              		.loc 1 227 15 is_stmt 1 view .LVU506
 1876 0106 D0E7     		b	.L114
 1877              	.L118:
 229:Core/Src/main.c ****               atualizarDisplay(3, temp_max%10);
 1878              		.loc 1 229 15 view .LVU507
 229:Core/Src/main.c ****               atualizarDisplay(3, temp_max%10);
 1879              		.loc 1 229 43 is_stmt 0 view .LVU508
 1880 0108 544D     		ldr	r5, .L137+32
 1881 010a 2968     		ldr	r1, [r5]
 1882 010c 524C     		ldr	r4, .L137+28
 1883 010e A4FB0131 		umull	r3, r1, r4, r1
 229:Core/Src/main.c ****               atualizarDisplay(3, temp_max%10);
 1884              		.loc 1 229 15 view .LVU509
 1885 0112 C908     		lsrs	r1, r1, #3
 1886 0114 0220     		movs	r0, #2
 1887 0116 FFF7FEFF 		bl	atualizarDisplay
 1888              	.LVL139:
 230:Core/Src/main.c ****               break;
 1889              		.loc 1 230 15 is_stmt 1 view .LVU510
 230:Core/Src/main.c ****               break;
 1890              		.loc 1 230 43 is_stmt 0 view .LVU511
 1891 011a 2968     		ldr	r1, [r5]
 1892 011c A4FB0134 		umull	r3, r4, r4, r1
 1893 0120 E408     		lsrs	r4, r4, #3
 1894 0122 04EB8404 		add	r4, r4, r4, lsl #2
 230:Core/Src/main.c ****               break;
 1895              		.loc 1 230 15 view .LVU512
 1896 0126 A1EB4401 		sub	r1, r1, r4, lsl #1
 1897 012a 0320     		movs	r0, #3
 1898 012c FFF7FEFF 		bl	atualizarDisplay
 1899              	.LVL140:
 231:Core/Src/main.c ****             case 3:
 1900              		.loc 1 231 15 is_stmt 1 view .LVU513
 1901 0130 BBE7     		b	.L114
 1902              	.L117:
 233:Core/Src/main.c ****               atualizarDisplay(3, umid_min%10);
 1903              		.loc 1 233 15 view .LVU514
 233:Core/Src/main.c ****               atualizarDisplay(3, umid_min%10);
 1904              		.loc 1 233 43 is_stmt 0 view .LVU515
 1905 0132 4B4D     		ldr	r5, .L137+36
 1906 0134 2968     		ldr	r1, [r5]
 1907 0136 484C     		ldr	r4, .L137+28
 1908 0138 A4FB0131 		umull	r3, r1, r4, r1
 233:Core/Src/main.c ****               atualizarDisplay(3, umid_min%10);
 1909              		.loc 1 233 15 view .LVU516
 1910 013c C908     		lsrs	r1, r1, #3
 1911 013e 0220     		movs	r0, #2
 1912 0140 FFF7FEFF 		bl	atualizarDisplay
 1913              	.LVL141:
 234:Core/Src/main.c ****               break;
 1914              		.loc 1 234 15 is_stmt 1 view .LVU517
 234:Core/Src/main.c ****               break;
 1915              		.loc 1 234 43 is_stmt 0 view .LVU518
 1916 0144 2968     		ldr	r1, [r5]
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 70


 1917 0146 A4FB0134 		umull	r3, r4, r4, r1
 1918 014a E408     		lsrs	r4, r4, #3
 1919 014c 04EB8404 		add	r4, r4, r4, lsl #2
 234:Core/Src/main.c ****               break;
 1920              		.loc 1 234 15 view .LVU519
 1921 0150 A1EB4401 		sub	r1, r1, r4, lsl #1
 1922 0154 0320     		movs	r0, #3
 1923 0156 FFF7FEFF 		bl	atualizarDisplay
 1924              	.LVL142:
 235:Core/Src/main.c ****             case 4:
 1925              		.loc 1 235 15 is_stmt 1 view .LVU520
 1926 015a A6E7     		b	.L114
 1927              	.L115:
 237:Core/Src/main.c ****               atualizarDisplay(3, umid_max%10);
 1928              		.loc 1 237 15 view .LVU521
 237:Core/Src/main.c ****               atualizarDisplay(3, umid_max%10);
 1929              		.loc 1 237 43 is_stmt 0 view .LVU522
 1930 015c 414D     		ldr	r5, .L137+40
 1931 015e 2968     		ldr	r1, [r5]
 1932 0160 3D4C     		ldr	r4, .L137+28
 1933 0162 A4FB0131 		umull	r3, r1, r4, r1
 237:Core/Src/main.c ****               atualizarDisplay(3, umid_max%10);
 1934              		.loc 1 237 15 view .LVU523
 1935 0166 C908     		lsrs	r1, r1, #3
 1936 0168 0220     		movs	r0, #2
 1937 016a FFF7FEFF 		bl	atualizarDisplay
 1938              	.LVL143:
 238:Core/Src/main.c ****               break;
 1939              		.loc 1 238 15 is_stmt 1 view .LVU524
 238:Core/Src/main.c ****               break;
 1940              		.loc 1 238 43 is_stmt 0 view .LVU525
 1941 016e 2968     		ldr	r1, [r5]
 1942 0170 A4FB0134 		umull	r3, r4, r4, r1
 1943 0174 E408     		lsrs	r4, r4, #3
 1944 0176 04EB8404 		add	r4, r4, r4, lsl #2
 238:Core/Src/main.c ****               break;
 1945              		.loc 1 238 15 view .LVU526
 1946 017a A1EB4401 		sub	r1, r1, r4, lsl #1
 1947 017e 0320     		movs	r0, #3
 1948 0180 FFF7FEFF 		bl	atualizarDisplay
 1949              	.LVL144:
 239:Core/Src/main.c ****           }
 1950              		.loc 1 239 15 is_stmt 1 view .LVU527
 1951 0184 91E7     		b	.L114
 1952              	.L135:
 244:Core/Src/main.c ****           menu_opcao++;
 1953              		.loc 1 244 11 view .LVU528
 1954 0186 4FF4FA70 		mov	r0, #500
 1955 018a FFF7FEFF 		bl	HAL_Delay
 1956              	.LVL145:
 245:Core/Src/main.c ****           if (menu_opcao > 4) menu_opcao = 0;
 1957              		.loc 1 245 11 view .LVU529
 245:Core/Src/main.c ****           if (menu_opcao > 4) menu_opcao = 0;
 1958              		.loc 1 245 21 is_stmt 0 view .LVU530
 1959 018e 304A     		ldr	r2, .L137+20
 1960 0190 1368     		ldr	r3, [r2]
 1961 0192 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 71


 1962 0194 1360     		str	r3, [r2]
 246:Core/Src/main.c ****         }
 1963              		.loc 1 246 11 is_stmt 1 view .LVU531
 246:Core/Src/main.c ****         }
 1964              		.loc 1 246 14 is_stmt 0 view .LVU532
 1965 0196 042B     		cmp	r3, #4
 1966 0198 8ED9     		bls	.L121
 246:Core/Src/main.c ****         }
 1967              		.loc 1 246 31 is_stmt 1 discriminator 1 view .LVU533
 246:Core/Src/main.c ****         }
 1968              		.loc 1 246 42 is_stmt 0 discriminator 1 view .LVU534
 1969 019a 1346     		mov	r3, r2
 1970 019c 0022     		movs	r2, #0
 1971 019e 1A60     		str	r2, [r3]
 1972 01a0 8AE7     		b	.L121
 1973              	.L136:
 249:Core/Src/main.c ****         { // Verifica se o botão de incremento ou decremento foi pressionado
 1974              		.loc 1 249 54 discriminator 1 view .LVU535
 1975 01a2 4FF40051 		mov	r1, #8192
 1976 01a6 2648     		ldr	r0, .L137+4
 1977 01a8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1978              	.LVL146:
 249:Core/Src/main.c ****         { // Verifica se o botão de incremento ou decremento foi pressionado
 1979              		.loc 1 249 50 discriminator 1 view .LVU536
 1980 01ac 0028     		cmp	r0, #0
 1981 01ae 8AD0     		beq	.L122
 1982              	.L129:
 215:Core/Src/main.c ****       { // Loop de navegação do menu
 1983              		.loc 1 215 7 is_stmt 1 view .LVU537
 217:Core/Src/main.c ****         switch (menu_opcao)
 1984              		.loc 1 217 9 view .LVU538
 1985 01b0 274C     		ldr	r4, .L137+20
 1986 01b2 2168     		ldr	r1, [r4]
 1987 01b4 0120     		movs	r0, #1
 1988 01b6 FFF7FEFF 		bl	atualizarDisplay
 1989              	.LVL147:
 218:Core/Src/main.c ****           {
 1990              		.loc 1 218 9 view .LVU539
 1991 01ba 2368     		ldr	r3, [r4]
 1992 01bc 042B     		cmp	r3, #4
 1993 01be 3FF674AF 		bhi	.L114
 1994 01c2 01A2     		adr	r2, .L116
 1995 01c4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1996              		.p2align 2
 1997              	.L116:
 1998 01c8 9B000000 		.word	.L120+1
 1999 01cc DF000000 		.word	.L119+1
 2000 01d0 09010000 		.word	.L118+1
 2001 01d4 33010000 		.word	.L117+1
 2002 01d8 5D010000 		.word	.L115+1
 2003              		.p2align 1
 2004              	.L128:
 258:Core/Src/main.c ****               break;
 2005              		.loc 1 258 15 view .LVU540
 258:Core/Src/main.c ****               break;
 2006              		.loc 1 258 26 is_stmt 0 view .LVU541
 2007 01dc 1D4C     		ldr	r4, .L137+24
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 72


 2008 01de 2068     		ldr	r0, [r4]
 2009 01e0 FFF7FEFF 		bl	incrementoDecremento
 2010              	.LVL148:
 258:Core/Src/main.c ****               break;
 2011              		.loc 1 258 24 view .LVU542
 2012 01e4 2060     		str	r0, [r4]
 259:Core/Src/main.c ****             case 2:
 2013              		.loc 1 259 15 is_stmt 1 view .LVU543
 2014 01e6 E3E7     		b	.L129
 2015              	.L127:
 261:Core/Src/main.c ****               break;
 2016              		.loc 1 261 15 view .LVU544
 261:Core/Src/main.c ****               break;
 2017              		.loc 1 261 26 is_stmt 0 view .LVU545
 2018 01e8 1C4C     		ldr	r4, .L137+32
 2019 01ea 2068     		ldr	r0, [r4]
 2020 01ec FFF7FEFF 		bl	incrementoDecremento
 2021              	.LVL149:
 261:Core/Src/main.c ****               break;
 2022              		.loc 1 261 24 view .LVU546
 2023 01f0 2060     		str	r0, [r4]
 262:Core/Src/main.c ****             case 3:
 2024              		.loc 1 262 15 is_stmt 1 view .LVU547
 2025 01f2 DDE7     		b	.L129
 2026              	.L126:
 264:Core/Src/main.c ****               break;
 2027              		.loc 1 264 15 view .LVU548
 264:Core/Src/main.c ****               break;
 2028              		.loc 1 264 26 is_stmt 0 view .LVU549
 2029 01f4 1A4C     		ldr	r4, .L137+36
 2030 01f6 2068     		ldr	r0, [r4]
 2031 01f8 FFF7FEFF 		bl	incrementoDecremento
 2032              	.LVL150:
 264:Core/Src/main.c ****               break;
 2033              		.loc 1 264 24 view .LVU550
 2034 01fc 2060     		str	r0, [r4]
 265:Core/Src/main.c ****             case 4:
 2035              		.loc 1 265 15 is_stmt 1 view .LVU551
 2036 01fe D7E7     		b	.L129
 2037              	.L124:
 267:Core/Src/main.c ****               break;
 2038              		.loc 1 267 15 view .LVU552
 267:Core/Src/main.c ****               break;
 2039              		.loc 1 267 26 is_stmt 0 view .LVU553
 2040 0200 184C     		ldr	r4, .L137+40
 2041 0202 2068     		ldr	r0, [r4]
 2042 0204 FFF7FEFF 		bl	incrementoDecremento
 2043              	.LVL151:
 267:Core/Src/main.c ****               break;
 2044              		.loc 1 267 24 view .LVU554
 2045 0208 2060     		str	r0, [r4]
 268:Core/Src/main.c ****           }
 2046              		.loc 1 268 15 is_stmt 1 view .LVU555
 271:Core/Src/main.c ****     } 
 2047              		.loc 1 271 25 view .LVU556
 268:Core/Src/main.c ****           }
 2048              		.loc 1 268 15 is_stmt 0 view .LVU557
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 73


 2049 020a D1E7     		b	.L129
 2050              	.L113:
 2051              	.LVL152:
 273:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim5);
 2052              		.loc 1 273 5 is_stmt 1 view .LVU558
 2053 020c 0E48     		ldr	r0, .L137+12
 2054 020e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2055              	.LVL153:
 274:Core/Src/main.c ****   
 2056              		.loc 1 274 5 view .LVU559
 2057 0212 0E48     		ldr	r0, .L137+16
 2058 0214 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2059              	.LVL154:
 2060              	.LBE15:
 206:Core/Src/main.c ****   {
 2061              		.loc 1 206 9 view .LVU560
 2062              	.L130:
 206:Core/Src/main.c ****   {
 2063              		.loc 1 206 3 view .LVU561
 2064              	.LBB16:
 208:Core/Src/main.c ****     if(!HAL_GPIO_ReadPin(GPIOB, funcao)) // Leitura do botão de função
 2065              		.loc 1 208 5 view .LVU562
 209:Core/Src/main.c ****     {
 2066              		.loc 1 209 5 view .LVU563
 209:Core/Src/main.c ****     {
 2067              		.loc 1 209 9 is_stmt 0 view .LVU564
 2068 0218 4FF40041 		mov	r1, #32768
 2069 021c 0848     		ldr	r0, .L137+4
 2070 021e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2071              	.LVL155:
 209:Core/Src/main.c ****     {
 2072              		.loc 1 209 7 view .LVU565
 2073 0222 0028     		cmp	r0, #0
 2074 0224 F2D1     		bne	.L113
 211:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 2075              		.loc 1 211 7 is_stmt 1 view .LVU566
 2076 0226 4FF4FA70 		mov	r0, #500
 2077 022a FFF7FEFF 		bl	HAL_Delay
 2078              	.LVL156:
 212:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim5);                
 2079              		.loc 1 212 7 view .LVU567
 2080 022e 0648     		ldr	r0, .L137+12
 2081 0230 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 2082              	.LVL157:
 213:Core/Src/main.c ****       
 2083              		.loc 1 213 7 view .LVU568
 2084 0234 0548     		ldr	r0, .L137+16
 2085 0236 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 2086              	.LVL158:
 2087 023a B9E7     		b	.L129
 2088              	.L138:
 2089              		.align	2
 2090              	.L137:
 2091 023c 00080240 		.word	1073874944
 2092 0240 00040240 		.word	1073873920
 2093 0244 00000240 		.word	1073872896
 2094 0248 00000000 		.word	.LANCHOR10
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 74


 2095 024c 00000000 		.word	.LANCHOR11
 2096 0250 00000000 		.word	.LANCHOR12
 2097 0254 00000000 		.word	.LANCHOR5
 2098 0258 CDCCCCCC 		.word	-858993459
 2099 025c 00000000 		.word	.LANCHOR3
 2100 0260 00000000 		.word	.LANCHOR0
 2101 0264 00000000 		.word	.LANCHOR2
 2102              	.LBE16:
 2103              		.cfi_endproc
 2104              	.LFE220:
 2106              		.section	.text.ADC_SET_CHANNEL,"ax",%progbits
 2107              		.align	1
 2108              		.syntax unified
 2109              		.thumb
 2110              		.thumb_func
 2112              	ADC_SET_CHANNEL:
 2113              	.LVL159:
 2114              	.LFB230:
 624:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 2115              		.loc 1 624 1 view -0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 16
 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 624:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 2119              		.loc 1 624 1 is_stmt 0 view .LVU570
 2120 0000 00B5     		push	{lr}
 2121              	.LCFI33:
 2122              		.cfi_def_cfa_offset 4
 2123              		.cfi_offset 14, -4
 2124 0002 85B0     		sub	sp, sp, #20
 2125              	.LCFI34:
 2126              		.cfi_def_cfa_offset 24
 625:Core/Src/main.c ****   sConfig.Channel = channel;
 2127              		.loc 1 625 3 is_stmt 1 view .LVU571
 625:Core/Src/main.c ****   sConfig.Channel = channel;
 2128              		.loc 1 625 26 is_stmt 0 view .LVU572
 2129 0004 0023     		movs	r3, #0
 2130 0006 0093     		str	r3, [sp]
 2131 0008 0193     		str	r3, [sp, #4]
 2132 000a 0293     		str	r3, [sp, #8]
 2133 000c 0393     		str	r3, [sp, #12]
 626:Core/Src/main.c ****   sConfig.Rank = 1;
 2134              		.loc 1 626 3 is_stmt 1 view .LVU573
 626:Core/Src/main.c ****   sConfig.Rank = 1;
 2135              		.loc 1 626 19 is_stmt 0 view .LVU574
 2136 000e 0090     		str	r0, [sp]
 627:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 2137              		.loc 1 627 3 is_stmt 1 view .LVU575
 627:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 2138              		.loc 1 627 16 is_stmt 0 view .LVU576
 2139 0010 0123     		movs	r3, #1
 2140 0012 0193     		str	r3, [sp, #4]
 628:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 2141              		.loc 1 628 3 is_stmt 1 view .LVU577
 629:Core/Src/main.c ****   {
 2142              		.loc 1 629 3 view .LVU578
 629:Core/Src/main.c ****   {
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 75


 2143              		.loc 1 629 7 is_stmt 0 view .LVU579
 2144 0014 6946     		mov	r1, sp
 2145 0016 0448     		ldr	r0, .L143
 2146              	.LVL160:
 629:Core/Src/main.c ****   {
 2147              		.loc 1 629 7 view .LVU580
 2148 0018 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 2149              	.LVL161:
 629:Core/Src/main.c ****   {
 2150              		.loc 1 629 6 view .LVU581
 2151 001c 10B9     		cbnz	r0, .L142
 633:Core/Src/main.c **** 
 2152              		.loc 1 633 1 view .LVU582
 2153 001e 05B0     		add	sp, sp, #20
 2154              	.LCFI35:
 2155              		.cfi_remember_state
 2156              		.cfi_def_cfa_offset 4
 2157              		@ sp needed
 2158 0020 5DF804FB 		ldr	pc, [sp], #4
 2159              	.L142:
 2160              	.LCFI36:
 2161              		.cfi_restore_state
 631:Core/Src/main.c ****   }
 2162              		.loc 1 631 5 is_stmt 1 view .LVU583
 2163 0024 FFF7FEFF 		bl	Error_Handler
 2164              	.LVL162:
 2165              	.L144:
 2166              		.align	2
 2167              	.L143:
 2168 0028 00000000 		.word	.LANCHOR9
 2169              		.cfi_endproc
 2170              	.LFE230:
 2172              		.global	__aeabi_f2d
 2173              		.global	__aeabi_d2uiz
 2174              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 2175              		.align	1
 2176              		.global	HAL_TIM_PeriodElapsedCallback
 2177              		.syntax unified
 2178              		.thumb
 2179              		.thumb_func
 2181              	HAL_TIM_PeriodElapsedCallback:
 2182              	.LVL163:
 2183              	.LFB231:
 635:Core/Src/main.c ****   if (htim->Instance == TIM4)
 2184              		.loc 1 635 60 view -0
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 0
 2187              		@ frame_needed = 0, uses_anonymous_args = 0
 635:Core/Src/main.c ****   if (htim->Instance == TIM4)
 2188              		.loc 1 635 60 is_stmt 0 view .LVU585
 2189 0000 70B5     		push	{r4, r5, r6, lr}
 2190              	.LCFI37:
 2191              		.cfi_def_cfa_offset 16
 2192              		.cfi_offset 4, -16
 2193              		.cfi_offset 5, -12
 2194              		.cfi_offset 6, -8
 2195              		.cfi_offset 14, -4
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 76


 2196 0002 2DED028B 		vpush.64	{d8}
 2197              	.LCFI38:
 2198              		.cfi_def_cfa_offset 24
 2199              		.cfi_offset 80, -24
 2200              		.cfi_offset 81, -20
 2201 0006 0446     		mov	r4, r0
 636:Core/Src/main.c ****   {
 2202              		.loc 1 636 3 is_stmt 1 view .LVU586
 636:Core/Src/main.c ****   {
 2203              		.loc 1 636 11 is_stmt 0 view .LVU587
 2204 0008 0268     		ldr	r2, [r0]
 636:Core/Src/main.c ****   {
 2205              		.loc 1 636 6 view .LVU588
 2206 000a 4C4B     		ldr	r3, .L153
 2207 000c 9A42     		cmp	r2, r3
 2208 000e 06D0     		beq	.L150
 2209              	.LVL164:
 2210              	.L146:
 655:Core/Src/main.c ****     if (atualizacao == 1)
 2211              		.loc 1 655 3 is_stmt 1 view .LVU589
 655:Core/Src/main.c ****     if (atualizacao == 1)
 2212              		.loc 1 655 11 is_stmt 0 view .LVU590
 2213 0010 2268     		ldr	r2, [r4]
 655:Core/Src/main.c ****     if (atualizacao == 1)
 2214              		.loc 1 655 6 view .LVU591
 2215 0012 4B4B     		ldr	r3, .L153+4
 2216 0014 9A42     		cmp	r2, r3
 2217 0016 57D0     		beq	.L151
 2218              	.LVL165:
 2219              	.L145:
 669:Core/Src/main.c **** 
 2220              		.loc 1 669 1 view .LVU592
 2221 0018 BDEC028B 		vldm	sp!, {d8}
 2222              	.LCFI39:
 2223              		.cfi_remember_state
 2224              		.cfi_restore 80
 2225              		.cfi_restore 81
 2226              		.cfi_def_cfa_offset 16
 2227 001c 70BD     		pop	{r4, r5, r6, pc}
 2228              	.LVL166:
 2229              	.L150:
 2230              	.LCFI40:
 2231              		.cfi_restore_state
 639:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 2232              		.loc 1 639 5 is_stmt 1 view .LVU593
 2233 001e 0120     		movs	r0, #1
 2234              	.LVL167:
 639:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 2235              		.loc 1 639 5 is_stmt 0 view .LVU594
 2236 0020 FFF7FEFF 		bl	ADC_SET_CHANNEL
 2237              	.LVL168:
 640:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, 100);
 2238              		.loc 1 640 5 is_stmt 1 view .LVU595
 2239 0024 474D     		ldr	r5, .L153+8
 2240 0026 2846     		mov	r0, r5
 2241 0028 FFF7FEFF 		bl	HAL_ADC_Start
 2242              	.LVL169:
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 77


 641:Core/Src/main.c ****     analog_temp = HAL_ADC_GetValue(&hadc1);
 2243              		.loc 1 641 5 view .LVU596
 2244 002c 6421     		movs	r1, #100
 2245 002e 2846     		mov	r0, r5
 2246 0030 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 2247              	.LVL170:
 642:Core/Src/main.c ****     temp = round((float)(analog_temp*99)/4095);
 2248              		.loc 1 642 5 view .LVU597
 642:Core/Src/main.c ****     temp = round((float)(analog_temp*99)/4095);
 2249              		.loc 1 642 19 is_stmt 0 view .LVU598
 2250 0034 2846     		mov	r0, r5
 2251 0036 FFF7FEFF 		bl	HAL_ADC_GetValue
 2252              	.LVL171:
 642:Core/Src/main.c ****     temp = round((float)(analog_temp*99)/4095);
 2253              		.loc 1 642 17 view .LVU599
 2254 003a 434B     		ldr	r3, .L153+12
 2255 003c 1860     		str	r0, [r3]
 643:Core/Src/main.c **** 
 2256              		.loc 1 643 5 is_stmt 1 view .LVU600
 643:Core/Src/main.c **** 
 2257              		.loc 1 643 37 is_stmt 0 view .LVU601
 2258 003e 00EB4000 		add	r0, r0, r0, lsl #1
 2259 0042 00EB4010 		add	r0, r0, r0, lsl #5
 643:Core/Src/main.c **** 
 2260              		.loc 1 643 18 view .LVU602
 2261 0046 07EE900A 		vmov	s15, r0	@ int
 2262 004a F8EE677A 		vcvt.f32.u32	s15, s15
 643:Core/Src/main.c **** 
 2263              		.loc 1 643 41 view .LVU603
 2264 004e 9FED3F8A 		vldr.32	s16, .L153+16
 643:Core/Src/main.c **** 
 2265              		.loc 1 643 12 view .LVU604
 2266 0052 C7EE887A 		vdiv.f32	s15, s15, s16
 2267 0056 17EE900A 		vmov	r0, s15
 2268 005a FFF7FEFF 		bl	__aeabi_f2d
 2269              	.LVL172:
 2270 005e 41EC100B 		vmov	d0, r0, r1
 2271 0062 FFF7FEFF 		bl	round
 2272              	.LVL173:
 2273 0066 51EC100B 		vmov	r0, r1, d0
 643:Core/Src/main.c **** 
 2274              		.loc 1 643 10 view .LVU605
 2275 006a 394E     		ldr	r6, .L153+20
 2276 006c FFF7FEFF 		bl	__aeabi_d2uiz
 2277              	.LVL174:
 2278 0070 3060     		str	r0, [r6]
 646:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 2279              		.loc 1 646 5 is_stmt 1 view .LVU606
 2280 0072 0020     		movs	r0, #0
 2281 0074 FFF7FEFF 		bl	ADC_SET_CHANNEL
 2282              	.LVL175:
 647:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, 100);
 2283              		.loc 1 647 5 view .LVU607
 2284 0078 2846     		mov	r0, r5
 2285 007a FFF7FEFF 		bl	HAL_ADC_Start
 2286              	.LVL176:
 648:Core/Src/main.c ****     analog_umid = HAL_ADC_GetValue(&hadc1);
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 78


 2287              		.loc 1 648 5 view .LVU608
 2288 007e 6421     		movs	r1, #100
 2289 0080 2846     		mov	r0, r5
 2290 0082 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 2291              	.LVL177:
 649:Core/Src/main.c ****     umid = round((float)(analog_umid*99)/4095);
 2292              		.loc 1 649 5 view .LVU609
 649:Core/Src/main.c ****     umid = round((float)(analog_umid*99)/4095);
 2293              		.loc 1 649 19 is_stmt 0 view .LVU610
 2294 0086 2846     		mov	r0, r5
 2295 0088 FFF7FEFF 		bl	HAL_ADC_GetValue
 2296              	.LVL178:
 649:Core/Src/main.c ****     umid = round((float)(analog_umid*99)/4095);
 2297              		.loc 1 649 17 view .LVU611
 2298 008c 314B     		ldr	r3, .L153+24
 2299 008e 1860     		str	r0, [r3]
 650:Core/Src/main.c ****     
 2300              		.loc 1 650 5 is_stmt 1 view .LVU612
 650:Core/Src/main.c ****     
 2301              		.loc 1 650 37 is_stmt 0 view .LVU613
 2302 0090 00EB4000 		add	r0, r0, r0, lsl #1
 2303 0094 00EB4010 		add	r0, r0, r0, lsl #5
 650:Core/Src/main.c ****     
 2304              		.loc 1 650 18 view .LVU614
 2305 0098 07EE900A 		vmov	s15, r0	@ int
 2306 009c F8EE677A 		vcvt.f32.u32	s15, s15
 650:Core/Src/main.c ****     
 2307              		.loc 1 650 12 view .LVU615
 2308 00a0 C7EE887A 		vdiv.f32	s15, s15, s16
 2309 00a4 17EE900A 		vmov	r0, s15
 2310 00a8 FFF7FEFF 		bl	__aeabi_f2d
 2311              	.LVL179:
 2312 00ac 41EC100B 		vmov	d0, r0, r1
 2313 00b0 FFF7FEFF 		bl	round
 2314              	.LVL180:
 2315 00b4 51EC100B 		vmov	r0, r1, d0
 650:Core/Src/main.c ****     
 2316              		.loc 1 650 10 view .LVU616
 2317 00b8 FFF7FEFF 		bl	__aeabi_d2uiz
 2318              	.LVL181:
 2319 00bc 264B     		ldr	r3, .L153+28
 2320 00be 1860     		str	r0, [r3]
 652:Core/Src/main.c ****   }
 2321              		.loc 1 652 5 is_stmt 1 view .LVU617
 2322 00c0 3168     		ldr	r1, [r6]
 2323 00c2 FFF7FEFF 		bl	controlarSaidas
 2324              	.LVL182:
 2325 00c6 A3E7     		b	.L146
 2326              	.L151:
 656:Core/Src/main.c ****     {
 2327              		.loc 1 656 5 view .LVU618
 656:Core/Src/main.c ****     {
 2328              		.loc 1 656 21 is_stmt 0 view .LVU619
 2329 00c8 244B     		ldr	r3, .L153+32
 2330 00ca 1B68     		ldr	r3, [r3]
 656:Core/Src/main.c ****     {
 2331              		.loc 1 656 8 view .LVU620
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 79


 2332 00cc 012B     		cmp	r3, #1
 2333 00ce 1AD0     		beq	.L152
 663:Core/Src/main.c ****       atualizarDisplay(2, temp/10);  
 2334              		.loc 1 663 7 is_stmt 1 view .LVU621
 2335 00d0 F020     		movs	r0, #240
 2336 00d2 FFF7FEFF 		bl	register1
 2337              	.LVL183:
 664:Core/Src/main.c ****       atualizarDisplay(3, temp%10); 
 2338              		.loc 1 664 7 view .LVU622
 664:Core/Src/main.c ****       atualizarDisplay(3, temp%10); 
 2339              		.loc 1 664 31 is_stmt 0 view .LVU623
 2340 00d6 1E4D     		ldr	r5, .L153+20
 2341 00d8 2968     		ldr	r1, [r5]
 2342 00da 214C     		ldr	r4, .L153+36
 2343              	.LVL184:
 664:Core/Src/main.c ****       atualizarDisplay(3, temp%10); 
 2344              		.loc 1 664 31 view .LVU624
 2345 00dc A4FB0131 		umull	r3, r1, r4, r1
 664:Core/Src/main.c ****       atualizarDisplay(3, temp%10); 
 2346              		.loc 1 664 7 view .LVU625
 2347 00e0 C908     		lsrs	r1, r1, #3
 2348 00e2 0220     		movs	r0, #2
 2349 00e4 FFF7FEFF 		bl	atualizarDisplay
 2350              	.LVL185:
 665:Core/Src/main.c ****       atualizacao = 1;
 2351              		.loc 1 665 7 is_stmt 1 view .LVU626
 665:Core/Src/main.c ****       atualizacao = 1;
 2352              		.loc 1 665 31 is_stmt 0 view .LVU627
 2353 00e8 2968     		ldr	r1, [r5]
 2354 00ea A4FB0134 		umull	r3, r4, r4, r1
 2355 00ee E408     		lsrs	r4, r4, #3
 2356 00f0 04EB8404 		add	r4, r4, r4, lsl #2
 665:Core/Src/main.c ****       atualizacao = 1;
 2357              		.loc 1 665 7 view .LVU628
 2358 00f4 A1EB4401 		sub	r1, r1, r4, lsl #1
 2359 00f8 0320     		movs	r0, #3
 2360 00fa FFF7FEFF 		bl	atualizarDisplay
 2361              	.LVL186:
 666:Core/Src/main.c ****     }    
 2362              		.loc 1 666 7 is_stmt 1 view .LVU629
 666:Core/Src/main.c ****     }    
 2363              		.loc 1 666 19 is_stmt 0 view .LVU630
 2364 00fe 174B     		ldr	r3, .L153+32
 2365 0100 0122     		movs	r2, #1
 2366 0102 1A60     		str	r2, [r3]
 669:Core/Src/main.c **** 
 2367              		.loc 1 669 1 view .LVU631
 2368 0104 88E7     		b	.L145
 2369              	.LVL187:
 2370              	.L152:
 658:Core/Src/main.c ****       atualizarDisplay(2, umid/10);  
 2371              		.loc 1 658 7 is_stmt 1 view .LVU632
 2372 0106 3820     		movs	r0, #56
 2373 0108 FFF7FEFF 		bl	register1
 2374              	.LVL188:
 659:Core/Src/main.c ****       atualizarDisplay(3, umid%10);
 2375              		.loc 1 659 7 view .LVU633
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 80


 659:Core/Src/main.c ****       atualizarDisplay(3, umid%10);
 2376              		.loc 1 659 31 is_stmt 0 view .LVU634
 2377 010c 124D     		ldr	r5, .L153+28
 2378 010e 2968     		ldr	r1, [r5]
 2379 0110 134C     		ldr	r4, .L153+36
 2380              	.LVL189:
 659:Core/Src/main.c ****       atualizarDisplay(3, umid%10);
 2381              		.loc 1 659 31 view .LVU635
 2382 0112 A4FB0131 		umull	r3, r1, r4, r1
 659:Core/Src/main.c ****       atualizarDisplay(3, umid%10);
 2383              		.loc 1 659 7 view .LVU636
 2384 0116 C908     		lsrs	r1, r1, #3
 2385 0118 0220     		movs	r0, #2
 2386 011a FFF7FEFF 		bl	atualizarDisplay
 2387              	.LVL190:
 660:Core/Src/main.c ****       atualizacao = 0;
 2388              		.loc 1 660 7 is_stmt 1 view .LVU637
 660:Core/Src/main.c ****       atualizacao = 0;
 2389              		.loc 1 660 31 is_stmt 0 view .LVU638
 2390 011e 2968     		ldr	r1, [r5]
 2391 0120 A4FB0134 		umull	r3, r4, r4, r1
 2392 0124 E408     		lsrs	r4, r4, #3
 2393 0126 04EB8404 		add	r4, r4, r4, lsl #2
 660:Core/Src/main.c ****       atualizacao = 0;
 2394              		.loc 1 660 7 view .LVU639
 2395 012a A1EB4401 		sub	r1, r1, r4, lsl #1
 2396 012e 0320     		movs	r0, #3
 2397 0130 FFF7FEFF 		bl	atualizarDisplay
 2398              	.LVL191:
 661:Core/Src/main.c ****     } else {
 2399              		.loc 1 661 7 is_stmt 1 view .LVU640
 661:Core/Src/main.c ****     } else {
 2400              		.loc 1 661 19 is_stmt 0 view .LVU641
 2401 0134 094B     		ldr	r3, .L153+32
 2402 0136 0022     		movs	r2, #0
 2403 0138 1A60     		str	r2, [r3]
 2404 013a 6DE7     		b	.L145
 2405              	.L154:
 2406              		.align	2
 2407              	.L153:
 2408 013c 00080040 		.word	1073743872
 2409 0140 000C0040 		.word	1073744896
 2410 0144 00000000 		.word	.LANCHOR9
 2411 0148 00000000 		.word	.LANCHOR13
 2412 014c 00F07F45 		.word	1166012416
 2413 0150 00000000 		.word	.LANCHOR14
 2414 0154 00000000 		.word	.LANCHOR15
 2415 0158 00000000 		.word	.LANCHOR16
 2416 015c 00000000 		.word	.LANCHOR17
 2417 0160 CDCCCCCC 		.word	-858993459
 2418              		.cfi_endproc
 2419              	.LFE231:
 2421              		.global	refrigeracao
 2422              		.global	aquecimento
 2423              		.global	irrigacao
 2424              		.global	temp_max
 2425              		.global	temp_min
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 81


 2426              		.global	umid_max
 2427              		.global	umid_min
 2428              		.global	menu_opcao
 2429              		.global	atualizacao
 2430              		.global	umid
 2431              		.global	temp
 2432              		.global	analog_umid
 2433              		.global	analog_temp
 2434              		.global	htim5
 2435              		.global	htim4
 2436              		.global	htim3
 2437              		.global	hadc1
 2438              		.section	.rodata
 2439              		.align	2
 2440              		.set	.LANCHOR8,. + 0
 2441              	.LC0:
 2442 0000 7E000000 		.word	126
 2443 0004 0C000000 		.word	12
 2444 0008 B6000000 		.word	182
 2445 000c 9E000000 		.word	158
 2446 0010 CC000000 		.word	204
 2447 0014 DA000000 		.word	218
 2448 0018 FA000000 		.word	250
 2449 001c 0E000000 		.word	14
 2450 0020 FE000000 		.word	254
 2451 0024 DE000000 		.word	222
 2452 0028 00000000 		.word	0
 2453              		.section	.bss.analog_temp,"aw",%nobits
 2454              		.align	2
 2455              		.set	.LANCHOR13,. + 0
 2458              	analog_temp:
 2459 0000 00000000 		.space	4
 2460              		.section	.bss.analog_umid,"aw",%nobits
 2461              		.align	2
 2462              		.set	.LANCHOR15,. + 0
 2465              	analog_umid:
 2466 0000 00000000 		.space	4
 2467              		.section	.bss.aquecimento,"aw",%nobits
 2468              		.align	2
 2469              		.set	.LANCHOR6,. + 0
 2472              	aquecimento:
 2473 0000 00000000 		.space	4
 2474              		.section	.bss.atualizacao,"aw",%nobits
 2475              		.align	2
 2476              		.set	.LANCHOR17,. + 0
 2479              	atualizacao:
 2480 0000 00000000 		.space	4
 2481              		.section	.bss.hadc1,"aw",%nobits
 2482              		.align	2
 2483              		.set	.LANCHOR9,. + 0
 2486              	hadc1:
 2487 0000 00000000 		.space	72
 2487      00000000 
 2487      00000000 
 2487      00000000 
 2487      00000000 
 2488              		.section	.bss.htim3,"aw",%nobits
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 82


 2489              		.align	2
 2490              		.set	.LANCHOR7,. + 0
 2493              	htim3:
 2494 0000 00000000 		.space	72
 2494      00000000 
 2494      00000000 
 2494      00000000 
 2494      00000000 
 2495              		.section	.bss.htim4,"aw",%nobits
 2496              		.align	2
 2497              		.set	.LANCHOR10,. + 0
 2500              	htim4:
 2501 0000 00000000 		.space	72
 2501      00000000 
 2501      00000000 
 2501      00000000 
 2501      00000000 
 2502              		.section	.bss.htim5,"aw",%nobits
 2503              		.align	2
 2504              		.set	.LANCHOR11,. + 0
 2507              	htim5:
 2508 0000 00000000 		.space	72
 2508      00000000 
 2508      00000000 
 2508      00000000 
 2508      00000000 
 2509              		.section	.bss.irrigacao,"aw",%nobits
 2510              		.align	2
 2511              		.set	.LANCHOR1,. + 0
 2514              	irrigacao:
 2515 0000 00000000 		.space	4
 2516              		.section	.bss.menu_opcao,"aw",%nobits
 2517              		.align	2
 2518              		.set	.LANCHOR12,. + 0
 2521              	menu_opcao:
 2522 0000 00000000 		.space	4
 2523              		.section	.bss.refrigeracao,"aw",%nobits
 2524              		.align	2
 2525              		.set	.LANCHOR4,. + 0
 2528              	refrigeracao:
 2529 0000 00000000 		.space	4
 2530              		.section	.bss.temp,"aw",%nobits
 2531              		.align	2
 2532              		.set	.LANCHOR14,. + 0
 2535              	temp:
 2536 0000 00000000 		.space	4
 2537              		.section	.bss.umid,"aw",%nobits
 2538              		.align	2
 2539              		.set	.LANCHOR16,. + 0
 2542              	umid:
 2543 0000 00000000 		.space	4
 2544              		.section	.data.temp_max,"aw"
 2545              		.align	2
 2546              		.set	.LANCHOR3,. + 0
 2549              	temp_max:
 2550 0000 1A000000 		.word	26
 2551              		.section	.data.temp_min,"aw"
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 83


 2552              		.align	2
 2553              		.set	.LANCHOR5,. + 0
 2556              	temp_min:
 2557 0000 0A000000 		.word	10
 2558              		.section	.data.umid_max,"aw"
 2559              		.align	2
 2560              		.set	.LANCHOR2,. + 0
 2563              	umid_max:
 2564 0000 53000000 		.word	83
 2565              		.section	.data.umid_min,"aw"
 2566              		.align	2
 2567              		.set	.LANCHOR0,. + 0
 2570              	umid_min:
 2571 0000 3C000000 		.word	60
 2572              		.text
 2573              	.Letext0:
 2574              		.file 3 "c:\\arm-gcc\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-ea
 2575              		.file 4 "c:\\arm-gcc\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-ea
 2576              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2577              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2578              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2579              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2580              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2581              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2582              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2583              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2584              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2585              		.file 14 "c:\\arm-gcc\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-e
 2586              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2587              		.file 16 "Core/Inc/main.h"
 2588              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2589              		.file 18 "<built-in>"
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 84


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:217    .text.MX_GPIO_Init:000000e4 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:225    .text.register1:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:231    .text.register1:00000000 register1
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:320    .text.register1:00000060 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:325    .text.register2:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:331    .text.register2:00000000 register2
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:420    .text.register2:00000060 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:425    .text.register3:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:431    .text.register3:00000000 register3
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:520    .text.register3:00000060 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:525    .text.controlarSaidas:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:531    .text.controlarSaidas:00000000 controlarSaidas
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:784    .text.controlarSaidas:00000134 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:799    .text.atualizarDisplay:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:805    .text.atualizarDisplay:00000000 atualizarDisplay
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:894    .text.atualizarDisplay:00000068 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:899    .text.incrementoDecremento:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:905    .text.incrementoDecremento:00000000 incrementoDecremento
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1009   .text.incrementoDecremento:0000006c $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1015   .text.Error_Handler:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1021   .text.Error_Handler:00000000 Error_Handler
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1053   .text.MX_ADC1_Init:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1058   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1164   .text.MX_ADC1_Init:00000060 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1171   .text.MX_TIM4_Init:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1176   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1279   .text.MX_TIM4_Init:00000064 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1285   .text.MX_TIM3_Init:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1290   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1412   .text.MX_TIM3_Init:0000007c $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1418   .text.MX_TIM5_Init:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1423   .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1526   .text.MX_TIM5_Init:00000064 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1532   .text.SystemClock_Config:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1538   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1685   .text.SystemClock_Config:0000009c $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1691   .text.main:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1697   .text.main:00000000 main
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1846   .text.main:000000d8 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1998   .text.main:000001c8 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2003   .text.main:000001dc $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2091   .text.main:0000023c $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2107   .text.ADC_SET_CHANNEL:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2112   .text.ADC_SET_CHANNEL:00000000 ADC_SET_CHANNEL
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2168   .text.ADC_SET_CHANNEL:00000028 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2175   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2181   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2408   .text.HAL_TIM_PeriodElapsedCallback:0000013c $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2528   .bss.refrigeracao:00000000 refrigeracao
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2472   .bss.aquecimento:00000000 aquecimento
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2514   .bss.irrigacao:00000000 irrigacao
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2549   .data.temp_max:00000000 temp_max
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2556   .data.temp_min:00000000 temp_min
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 85


C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2563   .data.umid_max:00000000 umid_max
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2570   .data.umid_min:00000000 umid_min
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2521   .bss.menu_opcao:00000000 menu_opcao
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2479   .bss.atualizacao:00000000 atualizacao
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2542   .bss.umid:00000000 umid
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2535   .bss.temp:00000000 temp
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2465   .bss.analog_umid:00000000 analog_umid
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2458   .bss.analog_temp:00000000 analog_temp
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2507   .bss.htim5:00000000 htim5
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2500   .bss.htim4:00000000 htim4
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2493   .bss.htim3:00000000 htim3
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2486   .bss.hadc1:00000000 hadc1
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2439   .rodata:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2454   .bss.analog_temp:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2461   .bss.analog_umid:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2468   .bss.aquecimento:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2475   .bss.atualizacao:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2482   .bss.hadc1:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2489   .bss.htim3:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2496   .bss.htim4:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2503   .bss.htim5:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2510   .bss.irrigacao:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2517   .bss.menu_opcao:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2524   .bss.refrigeracao:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2531   .bss.temp:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2538   .bss.umid:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2545   .data.temp_max:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2552   .data.temp_min:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2559   .data.umid_max:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:2566   .data.umid_min:00000000 $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1851   .text.main:000000dd $d
C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s:1851   .text.main:000000de $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_PWM_Start
HAL_TIM_PWM_Stop
HAL_Delay
HAL_GPIO_ReadPin
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_TIM_Base_Stop_IT
__aeabi_f2d
__aeabi_d2uiz
HAL_ADC_Start
ARM GAS  C:\Users\dayan\AppData\Local\Temp\ccjoeItV.s 			page 86


HAL_ADC_PollForConversion
HAL_ADC_GetValue
round
